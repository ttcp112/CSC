@using NSCSC.Shared
@model NSCSC.Shared.Models.PromotionModels
@{
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.ID;
}
@Html.HiddenFor(model => model.ID)
@if (!string.IsNullOrEmpty(_ID))
{
    @Html.Hidden("ImageURL", Model.ImageURL)
}

<div class="row form-horizontal form-label-left" style="margin-bottom:15px;">
    @*Promotion Name*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight">Name</label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = "Promotion Name", @autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.Name, null, new { @class = "label" })
        </div>
    </div>

    <!--Image Placeholder-->
    <div class="form-group">
        <label class="col-md-2 control-label"> </label>
        <div class="col-md-6">
            @if (!string.IsNullOrEmpty(Model.ImageURL))
            {
                <img id="upload-preview" src="@Model.ImageURL" height="100" width="100" />
            }
            else
            {
                <img id="upload-preview" src="@Commons.Image100_100" height="100" width="100" />
            }
        </div>
    </div>
    <!--IMAGE-->
    <div class="form-group">
        <label class="col-md-2 control-label">Image</label>
        <div class="col-md-6">
            <div class="upload-btn-wrapper" style="cursor:pointer;">
                <button class="btn btn-default btnFile" type="button">Add/Edit</button>
                @Html.TextBoxFor(model => model.PictureUpload, new { @id = "PictureUpload", @type = "file", @onchange = "PreviewImage(this,\"upload-preview\")", @accept = "*.jpg", @class = "inputFile" })
            </div>
            @Html.ValidationMessageFor(model => model.PictureUpload, null, new { @class = "label" })
        </div>
    </div>

    @*Priority*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Priority</label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Priority, new { @class = "form-control keyNumber", autocomplete = "off", type = "number", min = "0" })
            @Html.ValidationMessageFor(model => model.Priority, null, new { @class = "label" })
        </div>
    </div>
    @*Promotion Code*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Promotion Code</label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.PromotionCode, new { @class = "form-control", placeholder = "Promotion Code", autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.PromotionCode, null, new { @class = "label" })
        </div>
    </div>


    @* Status*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Active</label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            <label>@Html.CheckBoxFor(model => model.IsActive, new { @class = "js-switch-chk" })</label>
        </div>
    </div>

    @*Sequence*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Sequence</label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Sequence, new { @class = "form-control keyNumber", autocomplete = "off", type = "number", min = "0" })
            @Html.ValidationMessageFor(model => model.Sequence, null, new { @class = "label" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Maximum Amount</label>
        <div class="col-md-3 col-sm-3 col-xs-12">
            @Html.TextBox("MaximumAmount", Model.MaximumAmount > 0 ? Model.MaximumAmount : 0,
                                new { @class = "form-control txtMaximumEarnAmount keyNumber", @data_type = "float", type = "number", min = "0" })
            @*   @Html.TextBoxFor(model => model.MaximumAmount, new { @class = "form-control", autocomplete = "off", type = "number", min = "0" })*@
            @Html.ValidationMessageFor(model => model.MaximumAmount, null, new { @class = "label label-danger" })
        </div>
        <div class="col-md-2 col-sm-2 col-xs-12">
            @Html.CheckBoxFor(model => model.IsUnlimited, new { @class = "chbTime flat", onchange = "ToggleAmount(this)" })Unlimited
            @Html.ValidationMessageFor(model => model.IsUnlimited, null, new { @class = "label" })
        </div>
    </div>

    @*Description*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Description </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control ckeditor", placeholder = "Description" })
            @Html.ValidationMessageFor(model => model.Description, null, new { @class = "label" })
        </div>
    </div>

    @*Promotion Period *@
    <div class="form-group">
        <label for="" class="col-md-offset-1 col-md-2 col-sm-12 col-xs-12 bottomBorder">Promotion Period</label>
    </div>

    @*Apply Form - Apply To*@
    @*Apply*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight">Apply From</label>
        <div class="control-label col-md-2 col-sm-2 col-xs-12">
            @Html.TextBox("ApplyFrom", Model.ApplyFrom.ToString("dd/MM/yyyy"), new { @class = "form-control datepicker" })
            @Html.ValidationMessageFor(model => model.ApplyFrom, null, new { @class = "label" })
        </div>
        <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight">Apply To</label>
        <div class="col-md-2 col-sm-2 col-xs-12">
            @Html.TextBox("ApplyTo", Model.ApplyTo.ToString("dd/MM/yyyy"), new { @class = "form-control datepicker" })
            @Html.ValidationMessageFor(model => model.ApplyTo, null, new { @class = "label" })
        </div>
    </div>

    @*Promotion Period*@
    <div class="form-group">
        <label for="" class="col-md-offset-1 col-md-2 col-sm-12 col-xs-12 bottomBorder">Promotion Type</label>
    </div>
    @*Spending*@
    <div class="form-group">
        <label class="control-label col-md-2 col-xs-12">Spending</label>
        <div class="col-md-10 text-right" style="border-bottom: 2px solid #ddd;">
            <a id="btn-add-more-tab" href="javascript:void(0);" class="a-fnb" onclick="AddMoreTab01(this); return false;" style="font-size:16px; color:#34495e;">
                <i class="fa fa-plus"></i>
                <span>Add more</span>
            </a>
            <span style="color:red; display:none" id="storeSpending"></span>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2 col-xs-12"></label>
        <div id="div-spending" class="col-md-offset-2 col-md-10" style="float:none;">
            <table class="table center-content">
                <thead>
                    <tr>
                        <th width="2%" style="font-weight:lighter;"></th>
                        <th width="15%" style="font-weight:lighter;">Spend Type</th>
                        <th width="25%" style="font-weight:lighter;">Qty/Amount</th>
                        <th width="15%" style="font-weight:lighter;">Item</th>
                        <th width="43%" style="font-weight:lighter;">Item Detail</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody style="max-height:500px; overflow-y:auto; overflow-x:hidden !important;">
                    @if (Model.ListSpendRule != null && Model.ListSpendRule.Count > 0)
                    {
                        for (int i = 0; i < Model.ListSpendRule.Count; i++)
                        {
                            @Html.Partial("_TabSpending", Model.ListSpendRule[i])
                        }
                    }
                    <tr id="tr-add-more-tab-spending">
                        <td style="padding-top:12px; text-align:left" colspan="6"></td>
                    </tr>
                </tbody>
            </table>
        </div>
        @Html.ValidationMessage("Spending", new { @class = "col-md-offset-2 col-md-10 label" })
    </div>

    @*Earning*@
    <div class="form-group">
        <label class="control-label col-md-2 col-xs-12">Earning</label>
        <div class="col-md-10 text-right" style="border-bottom: 2px solid #ddd;">
            <a id="btn-add-more-tab" href="#" class="a-fnb" onclick="AddMoreTab02(this); return false;" style="font-size:16px; color:#34495e;">
                <i class="fa fa-plus"></i>
                <span>Add more</span>
            </a>
            <span style="color:red; display:none" id="storeEarning"></span>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2 col-xs-12"></label>
        <div id="div-earning" class="col-md-offset-2 col-md-10" style="float:none;">
            <table class="table center-content">
                <thead>
                    <tr>
                        <th width="2%" style="font-weight:lighter;"></th>
                        <th width="15%" style="font-weight:lighter;">Earn Type</th>
                        <th width="25%" style="font-weight:lighter;">Percent/Value</th>
                        <th width="15%" style="font-weight:lighter;">Item</th>
                        <th width="10%" style="font-weight:lighter;">Qty</th>
                        <th width="33%" style="font-weight:lighter;">Item Detail</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody style="max-height:500px; overflow-y:auto; overflow-x:hidden !important;">
                    @if (Model.ListEarnRule != null && Model.ListEarnRule.Count > 0)
                    {
                        for (int i = 0; i < Model.ListEarnRule.Count; i++)
                        {
                            @Html.Partial("_TabEarning", Model.ListEarnRule[i])
                        }
                    }
                    <tr id="tr-add-more-tab-earning">
                        <td style="padding-top:12px; text-align:left" colspan="7"></td>
                    </tr>
                </tbody>
            </table>
        </div>
        @Html.ValidationMessage("Earning", new { @class = "col-md-offset-2 col-md-10 label" })
    </div>


</div>

@*Modal Condition AND - OR - SPENDING*@
<div class="modal fade bs-example-modal-sm" id="modal-choose-condition-spending" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="font-weight:bold;">Add Additional Spend Rules</h4>
            </div>
            <div class="modal-body scroll">
                <div class="form-group">
                    <div class="col-md-12 col-xs-12" style="text-align:center;">
                        <p style="font-size:15px;">
                            Choose condition type to connect Spend Rules. Please not that there is only one condition type used through all Spend Rules.
                        </p>
                        <div class="btn-group" data-toggle="buttons">
                            <label class="btn btn-primary active" style="width:100px;">
                                <input type="radio" name="optionsSpending" id="radSpendingAND" autocomplete="off" checked> AND
                            </label>
                            <label class="btn btn-primary" style="width:100px;">
                                <input type="radio" name="optionsSpending" id="radSpendingOR" autocomplete="off">OR
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="text-align:center;">
                <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button onclick="SaveSpending(this)" type="button" class="btn btn-beauty bg-fnb">Save</button>
            </div>
        </div>
    </div>
</div>

@*Modal Condition AND - OR - EARNING*@
<div class="modal fade bs-example-modal-sm" id="modal-choose-condition-earning" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="font-weight:bold;">Add Additional Earn Rules</h4>
            </div>
            <div class="modal-body scroll">
                <div class="form-group">
                    <div class="col-md-12 col-xs-12" style="text-align:center;">
                        <p style="font-size:15px;">
                            Choose condition type to connect Earn Rules. Please not that there is only one condition type used through all Spend Rules
                            .
                        </p>
                        <div class="btn-group" data-toggle="buttons">
                            <label class="btn btn-primary active" style="width:100px;">
                                <input type="radio" name="optionsEarning" id="radEarningAND" autocomplete="off" checked> AND
                            </label>
                            <label class="btn btn-primary" style="width:100px;">
                                <input type="radio" name="optionsEarning" id="radEarningOR" autocomplete="off">OR
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="text-align:center;">
                <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button onclick="SaveEarning(this)" type="button" class="btn btn-beauty bg-fnb">Save</button>
            </div>
        </div>
    </div>
</div>


@*choose Item *@
<div class="modal fade second" id="modal-choose-items" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="font-weight:bold;">Add Specific Items</h4>
            </div>
            <div class="modal-body scroll">
                <div class="form-group">
                    <div class="col-md-12 col-xs-12">
                        <div class="input-group">
                            <div class="input-group-btn">
                                <button type="button" class="btn bg-fnb" id="btnItemType">Product </button>
                                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <span class="caret"></span>
                                    <span class="sr-only">Toggle Dropdown</span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="javascript:void(0)" onclick="FilterProduct(@Commons.EProductType.Package.ToString("d"),'')">Package</a></li>
                                    <li><a href="javascript:void(0)" onclick="FilterProduct(@Commons.EProductType.Addition.ToString("d"),'')">Addition</a></li>
                                    <li><a href="javascript:void(0)" onclick="FilterProduct(@Commons.EProductType.Product.ToString("d"),'')">Product</a></li>
                                </ul>
                            </div>
                            <input type="text" class="form-control col-md-10" placeholder="Search Name" onkeypress="HandleKeyPress(event)" id="txtSearchSpending" />
                            <div class="input-group-btn">
                                <button type="button" onclick="SearchItem(this); return false;" class="btn bg-fnb">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="tbl-choose-items" class="form-group-sm" style="overflow: auto; height: 500px;">
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button onclick="AddItems(this)" type="button" class="btn btn-beauty bg-fnb">Add</button>
            </div>
        </div>
    </div>
</div>

@*choose Item Earn*@
<div class="modal fade second" id="modal-choose-items-earning" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="font-weight:bold;">Add Specific Items</h4>
            </div>
            <div class="modal-body scroll">
                <div class="form-group">
                    <div class="col-md-12 col-xs-12">
                        <div class="input-group">
                            <div class="input-group-btn">
                                <button type="button" class="btn bg-fnb" id="btnItemTypeearn">Package</button>
                                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <span class="caret"></span>
                                    <span class="sr-only">Toggle Dropdown</span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="javascript:void(0)" onclick="FilterProduct(@Commons.EProductType.Package.ToString("d"),'earn')">Package</a></li>
                                    <li><a href="javascript:void(0)" onclick="FilterProduct(@Commons.EProductType.Addition.ToString("d"),'earn')">Addition</a></li>
                                    <li><a href="javascript:void(0)" onclick="FilterProduct(@Commons.EProductType.Product.ToString("d"),'earn')">Product</a></li>
                                </ul>
                            </div>
                            <input type="text" class="form-control col-md-10" placeholder="Search Name" onkeypress="HandleKeyPress(event)" id="txtSearchEarning" />
                            <div class="input-group-btn">
                                <button type="button" onclick="SearchItem(this); return false;" class="btn bg-fnb">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="tbl-choose-items-earning" class="form-group-sm" style="overflow: auto; height: 500px;">
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button onclick="AddItemsEarn(this)" type="button" class="btn btn-beauty bg-fnb">Add</button>
            </div>
        </div>
    </div>
</div>
<script src="@Url.Content("~/build/js/customInput.js")"></script>
<script type="text/javascript">
    var btnGlobal;
    var listItem;
    var listItemEarn;



    $(document).ready(function (e) {
        /****** key number ***/
        KeyNumberCheck();

        $('.chbTime').on('ifChanged', function (event) {
            $(".txtMaximumEarnAmount").attr('disabled', event.target.checked);
        });
        $("#valueTypeDdl").select2({
            placeholder: "Please choose value type"
        });

        $('.datepicker').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_2",
            showDropdowns: true,
            //maxDate: new Date()
        });



        $('#datatable-responsive-list-item').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": 2 },
                { "width": "8%", "targets": 2 },
            ],
            "order": [[0, 'desc']],
            "displayLength": 25,
            "searching": false,     //txtSearch in filter
            "lengthChange": false   // Dropdownlist Page
            //"paging": false
        });


        /*=======Spending========*/
        $("#modal-choose-items").on('show.bs.modal', function (event) {
            btnGlobal = $(event.relatedTarget); // Button that triggered the modal
            //=========
            var OffSet = btnGlobal.data('whatever');
            listItem = [];
            $('.productName_' + OffSet + ':visible').each(function (index, value) {
                listItem.push($(this).attr('data-id'));
            });
            //==========
            $('#txtSearchSpending').val('');
            $("#tbl-choose-items").html('');
        });

        $("#modal-choose-items").on('shown.bs.modal', function (event) {
            btnGlobal = $(event.relatedTarget); // Button that triggered the modal
            FilterProduct(4, "");
        });

        /*======== Earn ======*/
        /*===============*/
        $("#modal-choose-items-earning").on('show.bs.modal', function (event) {
            btnGlobal = $(event.relatedTarget); // Button that triggered the modal
            //=========
            var OffSet = btnGlobal.data('whatever');
            listItem = [];
            $('.productNameEarn_' + OffSet + ':visible').each(function (index, value) {
                listItem.push($(this).attr('data-id'));
            });
            //==========
            $('#txtSearchEarning').val('');
            $("#tbl-choose-items-earning").html('');
        });

        $("#modal-choose-items-earning").on('shown.bs.modal', function (event) {
            btnGlobal = $(event.relatedTarget); // Button that triggered the modal
            FilterProduct(4, "earn");
        });
    });

    /*Add More Spending*/
    var conditionSpending = "";

    @if(Model.IsUnlimited)
    {
          @:ToggleAmount($(".chbTime")[0]);
        }

    @if (Model.ListSpendRule != null)
    {
        if (Model.ListSpendRule.Count > 1)
        {
            if (Model.OperatorSpend == (int)Commons.EOperatorType.And)
            {
                @:conditionSpending = "AND";
               }
            else
            {
                @:conditionSpending = "OR";
                }
        }
    }

    function ToggleAmount(chb) {
        $(".txtMaximumEarnAmount").attr('disabled', $(chb).prop('checked'));
    }

    function SetProductNameSpending(offSet) {
        var productName = "";
        $('.productName_' + offSet + ':visible').each(function (index, value) {
            productName += $(this).attr('data-value') + ","
        });
        $("#txtSpending_" + offSet).val(productName);
    }

    function FilterProduct(val, type) {
        if (val === 4) {
            ItemType = '@NSCSC.Shared.Commons.EProductType.Package.ToString("d")';
            $("#btnItemType" + type + "").text("Package");
        } else if (val === 2) {
            ItemType = '@NSCSC.Shared.Commons.EProductType.Addition.ToString("d")';
            $("#btnItemType" + type + "").text("Addition");
        }
        else {
            ItemType = '@NSCSC.Shared.Commons.EProductType.Product.ToString("d")';
            $("#btnItemType" + type + "").text("Product");
        }
        if (type === "earn") {
            LoadItemsChooseEarn("#tbl-choose-items-earning");
        } else
            LoadItemsChoose("#tbl-choose-items");
    }

    function SaveSpending(e) {
        $("#modal-choose-condition-spending").modal('hide');
        if ($("#radSpendingAND").is(":checked")) {
            conditionSpending = "AND";
        } else {
            conditionSpending = "OR";
        }
        AddMoreSpending(e);
    }

    function AddMoreTab01(e) {
        var currentRowDisplay = $("#div-spending > table > tbody > tr:visible").length - 1;
        $(e).next().css('display', 'none');
        if (conditionSpending === "" && currentRowDisplay > 0) {
            $("#modal-choose-condition-spending").modal({
                keyboard: false,
                show: true,
            });
        }
        else {
            AddMoreSpending(e)
        }
    }

    function AddMoreSpending(e) {
        $('.se-pre-con').show();
        var currentOffset = $("#div-spending > table > tbody > tr").length - 1;
        $.ajax({
            url: '@Url.Action("AddSpending", "SBInventoryPromotion")',
            type: 'get',
            data: {
                currentOffset: currentOffset,
                Condition: conditionSpending
            },
            dataType: 'html',
            success: function (data) {
                $('.se-pre-con').hide();
                $("#tr-add-more-tab-spending").before(data);
            }
        });
    }

    function DeleteTabPanelSpending(btn) {
        var count = $(".spendingRow:visible").length;
        var tr = $(btn).parents('tr:first');
        $(tr).find('input.GroupStatus').val(9);
        $(tr).css('display', 'none');
        if (count == 1) {
            conditionSpending = "";
        }
    }

    function ShowModalAddItem(btn, index, store) {
        //$('#' + store).css('display', 'none');
        var tr = $(btn).parents('tr:first');
        var modal = $(tr).find(".modal");
        var contentWidth = ($("html").width() - $(".main-sidebar").width()) / 2;
        var marginLeft = (contentWidth - 450) + $(".main-sidebar").width();
        $(modal).modal({
            keyboard: false,
            show: true,
        });
        CopyHtml($(btn).parents('tr:first').find('table > tbody > tr'));
    }

    var HtmlCloned = '';
    function CopyHtml(container) {
        HtmlCloned = $(container).clone();
    }

    function PasteHtml(container) {
        $(container).html(HtmlCloned);
    }

    /*SPENDING*/
    function OnChangeSpendOnType(obj) {
        var index = obj.value;
        var offSet = $(obj).attr('data-offSet');
        if (index == '@Commons.ESpendOnType.SpecificItem.ToString("d")') {
            $("#txtSpending_" + offSet).removeAttr("disabled");
        }
        else {
            $("#txtSpending_" + offSet).attr("disabled", true);
        }
    }

    /*SPENDING*/
    function OnChangeSpendType(obj) {
        var index = obj.value;
        var offSet = $(obj).attr('data-offSet');
        if (index == 2) /* spend money */ {
            $("#txtSpendingAmount_" + offSet).attr("data-type", "float");
            $("#txtSpendingAmount_" + offSet).val(0);
        }
        else /* spend item */ {
            $("#txtSpendingAmount_" + offSet).attr("data-type", "int");
            $("#txtSpendingAmount_" + offSet).val(0);
        }
    }

    /**
     * LoadItemsChoose
     *
     */
    function LoadItemsChoose(container) {
        $('.se-pre-con').show();
        $.ajax({
            url: '@Url.Action("LoadItems", "SBInventoryPromotion")',
            type: 'get',
            data: {
                ItemType: ItemType
            },
            dataType: 'html',
            traditional: true,
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            error: function (e) {
            },
            success: function (data) {
                $(container).html(data);
                $('.SpecificItems').each(function (index, value) {
                    var dataId = $(this).attr('data-id');
                    if (listItem.indexOf(dataId) != -1) {
                        $(this).addClass('hide');//.hide();
                    }
                });
            },
            complete: function () {
                $('.se-pre-con').hide();
            }
        });
    }

    function AddItems(btn) {
        var groupOffSet = $(btnGlobal).parents('tr:last').find('input[name*="OffSet"]').val();
        var currentItemOffset = $(btnGlobal).parents('table:first > tbody').find('tr').length - 1;
        var trs = $(btn).parents('.modal').find('.modal-body table tbody tr');
        var data = [];
        for (var i = 0; i < trs.length; i++) {
            var tr = trs[i];
            if ($(tr).find('td input[type="checkbox"]').prop('checked')) {
                var ID = $(tr).attr('data-id');
                var Code = $(tr).find('td #hidCode').val();
                var Name = $(tr).find('td #hidName').val();
                var ItemType = parseInt($(tr).find('td #hidItemType').val());

                var PromotionProductDTO = {
                    ID: ID,
                    Code: Code,
                    Name: Name,
                    ProductType: ItemType,
                }
                data.push(PromotionProductDTO);
            }
        }
        var SpendingRuleDTO = {
            ListProduct: data,
            currentgroupOffSet: groupOffSet,
            currentItemOffset: currentItemOffset
        }
        if (data.length > 0) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddItems", "SBInventoryPromotion")',
                traditional: true,
                data: JSON.stringify(SpendingRuleDTO),
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                beforeSend: function () {
                    $('.se-pre-con').show();
                },
                complete: function () {
                    $('.se-pre-con').hide();
                },
                success: function (data) {

                    $(btnGlobal).parents('tr:first').before(data);
                    $(btn).parents('.modal:first').modal('hide');
                    //========
                    $('#popupSpending').css({ "overflow": "auto", "height": $(window).height() - 200 + "px" })
                }
            });
        }
    }

    function DeleteItems(btn) {
        var tr = $(btn).parents('tr:first');
        $(tr).find('input.ItemStatus').val(9);
        $(tr).css('display', 'none');
    }

    /***** Earning ****/
    /*Add More Earning*/
    var conditionEarning = "";
    @if (Model.ListEarnRule != null)
    {
        if (Model.ListEarnRule.Count > 1)
        {
            if (Model.OperatorEarn == (int)Commons.EOperatorType.And)
            {
                @:conditionEarning = "AND";
               }
            else
            {
                @:conditionEarning = "OR";
                }
        }
    }
    function AddMoreTab02(e) {
        var currentRowDisplay = $("#div-earning > table > tbody > tr:visible").length - 1;
        $(e).next().css('display', 'none');
        if (conditionEarning === "" && currentRowDisplay > 0) {
            $("#modal-choose-condition-earning").modal({
                keyboard: false,
                show: true,
            });
        }
        else {
            AddMoreEarning(e)
        }
    }

    function AddMoreEarning(e) {
        $('.se-pre-con').show();
        var currentOffset = $("#div-earning > table > tbody > tr").length - 1;
        $.ajax({
            url: '@Url.Action("AddEarning", "SBInventoryPromotion")',
            type: 'get',
            data: {
                currentOffset: currentOffset,
                Condition: conditionEarning
            },
            dataType: 'html',
            success: function (data) {
                $('.se-pre-con').hide();
                $("#tr-add-more-tab-earning").before(data);
            }
        });
    }

    function SaveEarning(e) {
        $("#modal-choose-condition-earning").modal('hide');
        if ($("#radEarningAND").is(":checked")) {
            conditionEarning = "AND"
        } else {
            conditionEarning = "OR";
        }
        AddMoreEarning(e);
    }

    function OnChangeEarnType(obj) {
        var index = obj.value;
        var offSet = $(obj).attr('data-offSet');

        if (index == '@Commons.EEarnType.SpecificItem.ToString("d")') {
            $("#txtEarning_" + offSet).removeAttr("disabled");
        }
        else {
            $("#txtEarning_" + offSet).attr("disabled", true);
        }
    }
    function SetProductNameEarning(offSet) {
        var productName = "";
        $('.productNameEarn_' + offSet + ':visible').each(function (index, value) {
            productName += $(this).attr('data-value') + ","
        });
        $("#txtEarning_" + offSet).val(productName);
    }

    function LoadItemsChooseEarn(container) {
        $('.se-pre-con').show();
        $.ajax({
            url: '@Url.Action("LoadItemsEarn", "SBInventoryPromotion")',
            type: 'get',
            data: {
                ItemType: ItemType
            },
            dataType: 'html',
            traditional: true,
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            error: function (e) {
            },
            success: function (data) {
                $(container).html(data);

                $('.SpecificItems').each(function (index, value) {
                    var dataId = $(this).attr('data-id');
                    if (listItem.indexOf(dataId) != -1) {
                        $(this).addClass('hide');//.hide();
                    }
                });
            },
            complete: function () {
                $('.se-pre-con').hide();
            }
        });
    }

    function AddItemsEarn(btn) {
        var groupOffSet = $(btnGlobal).parents('tr:last').find('input[name*="OffSet"]').val();
        var currentItemOffset = $(btnGlobal).parents('table:first > tbody').find('tr').length - 1;
        var trs = $(btn).parents('.modal').find('.modal-body table tbody tr');
        var data = [];
        for (var i = 0; i < trs.length; i++) {
            var tr = trs[i];
            if ($(tr).find('td input[type="checkbox"]').prop('checked')) {
                var ID = $(tr).attr('data-id');
                var Code = $(tr).find('td #hidCode').val();
                var Name = $(tr).find('td #hidName').val();
                var ItemType = parseInt($(tr).find('td #hidItemType').val());
                var PromotionProductDTO = {
                    ID: ID,
                    Code: Code,
                    Name: Name,
                    ProductType: ItemType,
                }
                data.push(PromotionProductDTO);
            }
        }
        var EarningRuleDTO = {
            ListProduct: data,
            currentgroupOffSet: groupOffSet,
            currentItemOffset: currentItemOffset
        }
        if (data.length > 0) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddItemsEarn", "SBInventoryPromotion")',
                traditional: true,
                data: JSON.stringify(EarningRuleDTO),
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                beforeSend: function () {
                    $('.se-pre-con').show();
                },
                complete: function () {
                    $('.se-pre-con').hide();
                },
                success: function (data) {
                    $('.se-pre-con').hide();
                    $(btnGlobal).parents('tr:first').before(data);
                    $(btn).parents('.modal:first').modal('hide');
                    //========
                    $('#popupEarning').css({ "overflow": "auto", "height": $(window).height() - 200 + "px" })
                }
            });
        }
    }

    function DeleteTabPanelEarning(btn) {
        var count = $(".earningRow:visible").length;
        var tr = $(btn).parents('tr:first');
        $(tr).find('input.GroupStatus').val(9);
        $(tr).css('display', 'none');

        if (count == 1) {
            conditionEarning = "";
        }
    }

    function SearchItem(btn) {
        var keySearch = $(btn).parents('div.form-group:first').find('input').val().toLowerCase();
        var trs = $(btn).parents('.modal-body:first').find('tbody tr');
        //var arrKeySearch = keySearch.split(' ');
        if (keySearch != '') {
            for (var i = 0; i < trs.length; i++) {
                if (!$(trs[i]).hasClass('hide')) {
                    var name = $.trim($(trs[i]).find('td:last').text().toLowerCase());
                    if (name.indexOf(keySearch) != -1) {
                        if ($(trs[i]).css('display') == 'none')
                            $(trs[i]).css('display', 'table-row');
                        //break;
                    }
                    else
                        if ($(trs[i]).css('display') == 'table-row')
                            $(trs[i]).css('display', 'none');
                    //}
                }
            }
        }
        else {
            $(trs).each(function (e) {
                if (!$(this).hasClass('hide')) {
                    if ($(this).css('display') == 'none')
                        $(this).css('display', 'table-row');
                }
            });
        }
    }
</script>
