@using NSCSC.Shared
@model NSCSC.Shared.Models.CRM.OrderReceiptManagement.OrderReceiptManagementViewModels
<div class="table-responsive">
    <div class="x_panel">
        <div class="x_title">
            <h2>Order Receipt Managements</h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <table id="datatable-responsive" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action" cellspacing="0" style="width:100%;">
                <thead style="background-color:#34495e; color:#fff;">
                    <tr>
                        <th style="text-align:center;">Receipt</th>
                        <th style="text-align:center;">Paid time</th>
                        <th style="text-align:center;">Customer</th>
                        <th style="text-align:center;">Email</th>
                        <th style="text-align:center;">Status</th>
                        <th style="text-align:center;">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListItem != null)
                    {
                        for (int i = 0; i < Model.ListItem.Count; i++)
                        {
                            string styleRow = "row-evenItem";
                            if (i % 2 == 0)
                            {
                                styleRow = "row-oddItem";
                            }
                            var item = Model.ListItem[i];
                            <tr class="@styleRow">
                                <td style="color:#34495e; font-weight:bold;">&nbsp;&nbsp;@item.ReceiptNo</td>
                                <td style="text-align:center;">
                                    @item.Date.ToString(Commons.FormatDateTime)
                                </td>
                                <td style="text-align:center;">@item.CustomerName</td>
                                <td style="text-align:center;">
                                    @*@Html.Action("MarkEmailView", new { Email = item.CustomerEmail })*@
                                    @Html.Raw(item.CustomerEmail)
                                </td>
                                <td style="text-align:center;">
                                    @switch (item.ReceiptStatus)
                                    {
                                        case (byte)Commons.EReceiptStatus.New:
                                            @Html.Raw("<span class='label label-new'>" + Commons.ReceiptStatusNew + "</span>")
                                            break;
                                        case (byte)Commons.EReceiptStatus.OnProgress:
                                            @Html.Raw("<span class='label label-on-progress'>" + Commons.ReceiptStatusOnProgress + "</span>")
                                            break;
                                        case (byte)Commons.EReceiptStatus.Completed:
                                            @Html.Raw("<span class='label label-success'>" + Commons.ReceiptStatusCompleted + "</span>")
                                            break;
                                        case (byte)Commons.EReceiptStatus.Recalled:
                                            @Html.Raw("<span class='label label-warning'>" + Commons.ReceiptStatusRecalled + "</span>")
                                            break;
                                    }
                                </td>
                                <td style="text-align:center;">
                                    <a href="javascript:void(0)"
                                       onclick="ShowView('@Url.Action("View", "CRMOrderReceiptManagement", new { id = @item.ID })')"
                                       class="btn btn-primary btn-xs view details"><i class="fa fa-eye"></i>&nbsp;View</a>&nbsp;&nbsp;
                                    <a href="javascript:void(0)"
                                       onclick="ShowView('@Url.Action("Edit", "CRMOrderReceiptManagement", new { id = @item.ID })')"
                                       class="btn btn-info btn-xs edit details action-class"><i class="fa fa-edit"></i>&nbsp;Edit</a>&nbsp;
                                    @*<a href="javascript:void(0)"
                                        onclick="ShowModalDelete('.modal-delete', '@item.ID')"
                                        class="btn btn-danger btn-xs delete details"><i class="fa fa-trash-o"></i>&nbsp;Delete</a>*@
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@*@Html.Partial("~/Views/Shared/_popupDelete.cshtml",
    new Dictionary<string, string> { { "A", "Currency" }, { "B", "This currency already has transaction. Cannot delete this one." } })*@

<style>
    .label-new {
        background-color: transparent;
        color: #333;
        border: 1px solid;
    }

    .label-on-progress {
        background-color: blue;
    }
</style>
<script type="text/javascript">

    function ShowView(url) {
        ShowViewOrEdit(url);
        return false;
    }

    $(document).ready(function () {
        var handleDataTableButtons = function () {
            if ($("#datatable-buttons").length) {
                $("#datatable-buttons").DataTable({

                    dom: "Bfrtip",
                    responsive: true
                });
            }
        };

        TableManageButtons = function () {
            "use strict";
            return {
                init: function () {
                    handleDataTableButtons();
                }
            };
        }();

        $('#datatable').dataTable();
        $('#datatable-keytable').DataTable({
            keys: true
        });

        $('#datatable-responsive').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": [2, 5] },
                { "width": "2%", "targets": 0 },
                { "width": "8%", "targets": 1 },
                { "width": "10%", "targets": 2 },
                { "width": "8%", "targets": 3 },
                { "width": "2%", "targets": 4 },
                { "width": "3%", "targets": 5 }
            ],
            "order": [[3, 'asc'], [0, 'asc'], [1, 'asc'], [4, 'asc']],
            "displayLength": 25,
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;
                //Column Group
                api.column(3, { page: 'current' }).data().each(function (group, i) {
                    if (last !== group) {
                        $(rows).eq(i).before(
                            '<tr class="group"><td colspan="6"><strong style="color:#d9534f;">' + (group === '' ? '|' : group) + '</strong></td></tr>'
                        );
                        last = group;
                    }
                });
            }
        });

        var table = $('#datatable-fixed-header').DataTable({
            fixedHeader: true
        });

        /* check permission */
        @{
            var userSession = Session["User"] as NSCSC.Shared.Models.UserSession;
            if (userSession != null)
            {
                var tmpAction = userSession.ListPermission.Where(o => o.Code == (int)@NSCSC.Shared.Commons.EModuleCode.CRM_OrderReceiptMana).Select(o => o.IsAction).FirstOrDefault();
                if (tmpAction == false)
                {
                     <text>$('.action-class').hide();</text>
                }
            }
        }

        TableManageButtons.init();
    });

</script>
