@model NSCSC.Shared.Models.CRM.OrderReceiptManagement.ReceiptDetailDTO
@using NSCSC.Shared
@{
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.ID;
}
@if (!string.IsNullOrEmpty(_ID))
{
    @Html.Hidden("ID", Model.ID)
    @Html.Hidden("ReceiptNo", Model.ReceiptNo)
    @Html.Hidden("Date", Model.Date)
    @Html.Hidden("CustomerName", Model.CustomerName)
    @Html.Hidden("CustomerEmail", Model.CustomerEmail)
}

<div class="row form-horizontal" style="margin-bottom:15px;">    
    @* ReceiptNo *@
    <div class="form-group">
        <h3 class="col-md-offset-2 col-md-6 col-sm-offset-2 col-sm-6 col-xs-12" style="color: red; font-weight: bold; margin-bottom: 0;">@Model.ReceiptNo</h3>
    </div>
    @* Date *@
    <div class="form-group">
        <div class="col-md-offset-2 col-md-6 col-sm-offset-2 col-sm-6 col-xs-12" style="font-style: italic; font-size: 14px;">@Model.Date.ToString(Commons.FormatDateTime)</div>
    </div>
    @* Customer *@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Customer </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Model.CustomerName
        </div>
    </div>   
    @* Email *@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Email </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.Action("MarkEmailView", new { Email = Model.CustomerEmail })
        </div>
    </div>
    @*Items List*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Items List</label>
        <div class="col-md-7 col-sm-7 col-xs-12 topDotBorder" style="margin:10px 10px 0 10px;"></div>
    </div>
    <div class="form-group">
        <div class="col-md-6 col-md-offset-2 col-sm-6 col-md-offset-2 col-xs-12">
            @Html.ValidationMessage("errorItem", null, new { @class = "label lable-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-8 col-sm-offset-2 col-sm-8 col-xs-12">

               <table id="list-items" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action tableBodyScroll" cellspacing="0" style="width:100%;">
                    <thead style="background-color:#34495e; color:#fff;width:100%">
                        <tr>
                            <th style="text-align:center;">Item</th>
                            <th style="text-align:center;">Type</th>
                            <th style="text-align:center;">Serial No.</th>
                            <th style="text-align:center;">Status</th>
                            <th style="text-align:center;">Action</th>
                        </tr>
                    </thead>
                    <tbody style="">
                        @if (Model.ListAdditionItem != null && Model.ListAdditionItem.Count > 0)
                        {
                            for (int i = 0; i < Model.ListAdditionItem.Count; i++)
                            {
                                @Html.Partial("_ListAdditionItem", Model.ListAdditionItem[i])
                            }
                        }
                    </tbody>
                </table>
        </div>
    </div>   
</div>

<div class="modal fade bs-example-modal-lg-SerialNumber" id="modelSerialNumber" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #2E8B57">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true" style="color: #fff; ">×</span>
                </button>
                <h3 class="modal-title" id="myModalLabel" style="text-align: center; color: #fff; font-size: 15px;">Device Serial Number</h3>
            </div>
            <div class="modal-body">
                <div class="">
                    <div class="form-group">
                        <label for="topic-name" class="col-md-3 col-sm-3 col-xs-12 lineHeight">Serial Number</label>
                        <div class="col-md-9 col-sm-9 col-xs-12">
                            <input type="text" class="form-control" id="txt-SerialNumber">
                        </div>
                        <label style="display: none; color: white; margin-left: 10px; " class="label label-danger" id="errorSerialNumber">Serial number cannot be duplicated.</label>
                        <label style="display: none; color: white; margin-left: 10px; " class="label label-danger" id="errorSerialNumberWithout">Please input the Serial Number.</label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a href="javascript:void(0)" class="btn btn-primary" onclick="SaveSerialNumber()">Confirm</a>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<style>
    #list-items tbody td {
        word-break: break-word;
        vertical-align: top;
        white-space: inherit;
    }
</style>

<script>
    var assetID = "";
    var action = "";
    var typeOfItem = "";
    var listSerialNo = [];
    var additionTypeHardware = '@Commons.EAdditionType.Hardware.ToString("d")';
    var serviceAssetStatusNew = '@Commons.EServiceAssetStatus.New.ToString("d")';
    var serviceAssetStatusRecalled = '@Commons.EServiceAssetStatus.Recalled.ToString("d")';

    $(document).ready(function () {
       
        $('#list-items').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": 4 },
                //{ "width": "30%", "targets": 0 },
                //{ "width": "20%", "targets": [1, 2, 4] },
                //{ "width": "10%", "targets": 3 },
            ],
            "autoWidth": false,
            "order": [
                [0, 'asc'],
            ],
            "searching": true,
            "paging": false,
            "bInfo": false,
            "rowCallback": function (row, data, index) {
                //if (data[2] != "Updating" && data[2] != "") {
                //    listSerialNo.push(data[2]);
                //}
                // Item is Hardware with status != New && status != Recalled
                var tdNode = $('td:eq(0)', row);
                var AdditionTypeNode = $(tdNode).find("input.hidAdditionType").val();
                var statusNode = $(tdNode).find("input.hidStateChange").val();
                if (AdditionTypeNode == additionTypeHardware && statusNode != serviceAssetStatusNew && statusNode != serviceAssetStatusRecalled) {
                    listSerialNo.push($(tdNode).find("input.hidSerialNo").val());
                }
            }
        });
    });

    function ChaneStatus(type, typeChange, AssetID) {
        assetID = AssetID;
        action = typeChange;
        typeOfItem = type;
        //-----------------
        if (type == '@Commons.EAdditionType.Hardware.ToString("d")') {
            if (typeChange == '@Commons.EChangeStatus.Done.ToString()') {
                $('#modelSerialNumber').modal({
                    show: 'true'
                });
                // Clear old data
                $("#txt-SerialNumber").val('');
                $('#errorSerialNumberWithout').hide();
                $('#errorSerialNumber').hide();
            }
            if (typeChange == '@Commons.EChangeStatus.Edit.ToString()') {
                $('#modelSerialNumber').modal({
                    show: 'true'
                });
                // Clear old data
                $("#txt-SerialNumber").val('');
                $('#errorSerialNumberWithout').hide();
                $('#errorSerialNumber').hide();
            }
            if (typeChange == '@Commons.EChangeStatus.Recall.ToString()') {
                var r = confirm("Are you sure to recall this hardware/ service?");
                if (r == true) {
                    $('#Action-Edit-' + assetID).hide();
                    $('#Action-Recall-' + assetID).hide();
                    //$('#SerialNo-' + assetID).html('').trigger('change');
                    $('#Status-' + assetID).html('Recalled').trigger('change');
                    $('#StatusNameUpdate-' + assetID).val('@Commons.EServiceAssetStatus.Recalled.ToString("d")');
                    $('#SerialUpdate-' + assetID).val(9);
                }
                // Delete Serial number of this item in listSerialNo
                var serialNoDel = $('#SerialNoUpdate-' + assetID).val();
                if (serialNoDel != "") {
                    listSerialNo = jQuery.grep(listSerialNo, function (value) {
                        return value != serialNoDel;
                    });
                }
            }
        }
        else {
            if (typeChange == '@Commons.EChangeStatus.Done.ToString()') {
                $('#Status-' + AssetID).html('Done').trigger('change');
                $('#Action-Done-' + assetID).hide();
                $('#Action-Edit-' + assetID).hide();
                $('#Action-Recall-' + assetID).show();
                $('#StatusNameUpdate-' + assetID).val('@Commons.EServiceAssetStatus.Done.ToString("d")');
                $('#SerialUpdate-' + assetID).val(9);
            }
            if (typeChange == '@Commons.EChangeStatus.Recall.ToString()') {
                var r = confirm("Are you sure to recall this hardware/ service?");
                if (r == true) {
                    $('#Action-Done-' + assetID).hide();
                    $('#Action-Recall-' + assetID).hide();
                    //$('#SerialNo-' + assetID).html('').trigger('change');
                    $('#Status-' + AssetID).html('Recalled').trigger('change');
                    $('#StatusNameUpdate-' + assetID).val('@Commons.EServiceAssetStatus.Recalled.ToString("d")');
                    $('#SerialUpdate-' + assetID).val(9);
                }
            }
        }
    };

    function SaveSerialNumber() {
        // Remove white space
        //var serialNo = $('#txt-SerialNumber').val().split(" ").join("");
        var serialNo = $.trim($('#txt-SerialNumber').val().replace(/[;,.\r\t\n\' ']+/g, ''));
        if (serialNo.length == 0) {
            $('#errorSerialNumberWithout').show();
            // Return new value after remove white space
            $('#txt-SerialNumber').val(serialNo);
        } else if (jQuery.inArray(serialNo, listSerialNo) !== -1) {
            $('#errorSerialNumberWithout').hide();
            $('#errorSerialNumber').show();
            // Return new value after remove white space
            $('#txt-SerialNumber').val(serialNo);
        } else {
            $('#errorSerialNumberWithout').hide();
            $('#errorSerialNumber').hide();
            if (typeOfItem == '@Commons.EAdditionType.Hardware.ToString("d")') {
                if (action.toString().trim() == '@Commons.EChangeStatus.Done.ToString().Trim()') {
                    $("#Action-" + action + '-' + assetID).hide();
                    $('#Action-Edit-' + assetID).show();
                    $('#Action-Recall-' + assetID).show();
                    $('#StatusNameUpdate-' + assetID).val('@Commons.EServiceAssetStatus.Done.ToString("d")');
                    $('#SerialUpdate-' + assetID).val(9);
                }
                if (action.toString().trim() == '@Commons.EChangeStatus.Edit.ToString().Trim()') {
                    $('#StatusNameUpdate-' + assetID).val('@Commons.EServiceAssetStatus.Done.ToString("d")');
                    $('#SerialUpdate-' + assetID).val(9);
                }
            }
            $('#modelSerialNumber').modal('hide');
            //var serialNo = $('#txt-SerialNumber').val();
            $('#Status-' + assetID).html('Done').trigger('change');
            $('#SerialNo-' + assetID).html(serialNo).trigger('change');

            // Delete Old Serial number of this item in listSerialNo
            var serialNoDel = $('#SerialNoUpdate-' + assetID).val();
            if (serialNoDel != "") {
                listSerialNo = jQuery.grep(listSerialNo, function (value) {
                    return value != serialNoDel;
                });
            }
            $('#SerialNoUpdate-' + assetID).val(serialNo);
            $('#SerialNoView-' + assetID).val(serialNo);

            // Add new Serial number into listSerialNo
            listSerialNo.push(serialNo);

            //var seriaNumber = $('#txt-SerialNumber').val();
            $('#SerialUpdate-' + assetID).val(9);
            $('#txt-SerialNumber').val('');
        }
    };

</script>
