@model NSCSC.Shared.Models.CRM.LicenseKeyManagement.LicenseDetailDTO
@using NSCSC.Shared
@{
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.ID;
}
@if (!string.IsNullOrEmpty(_ID))
{
    @Html.Hidden("ID", Model.ID)
    @Html.Hidden("ReceiptNo", Model.ReceiptNo)
    @Html.Hidden("Date", Model.DateCreated)
    @Html.Hidden("CustomerName", Model.CustomerName)
    @Html.Hidden("CustomerEmail", Model.CustomerEmail)
    @Html.Hidden("LicenseKey", Model.LicenseKey)
    @Html.Hidden("NumberOfDevice", Model.NumberOfDevice)
    @Html.Hidden("ExpiredTime", Model.ExpiredTime)
}

<div class="row form-horizontal" style="margin-bottom:15px;">
    @* ReceiptNo *@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12"></label>
        <h3 class="col-md-6 col-sm-6 col-xs-12" style="color: red; font-weight: bold; margin-bottom: 0;">
            @Model.ReceiptNo
        </h3>
    </div>
    @* DateCreated *@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12"></label>
        <div class="col-md-6 col-sm-6 col-xs-12" style="font-style: italic; font-size: 14px;">
            @Model.DateCreated.ToString(Commons.FormatDateTime)
        </div>
    </div>
    @* Customer *@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Customer </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Model.CustomerName
        </div>
    </div>
    @* Email *@
    <div class="form-group" style="">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Email </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.Action("MarkEmailView", new { Email = Model.CustomerEmail })
        </div>
    </div>
    @* License Key *@
    <div class="form-group" style="">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">License Key </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Model.LicenseKey
        </div>
    </div>
    @* Type *@
    <div class="form-group" style="">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Type </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @if (Model.ProductType == (byte)Commons.EProductType.Product)
            {
                @Html.Raw(Commons.EProductType.Product.ToString())
            }
            else if (Model.ProductType == (byte)Commons.EProductType.Addition)
            {
                @Html.Raw(((Commons.EAdditionType)Enum.ToObject(typeof(Commons.EAdditionType), Model.AdditionType)).ToString())
            }
        </div>
    </div>
    @* Active*@
    <div class="form-group" style="">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Active </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            <label>
                @Html.CheckBoxFor(model => model.IsActive, new { @class = "js-switch-chk" })  
            </label>
        </div>
    </div>

    @*Number of Devices*@
    @*Product, Function(Addition), Software(Addition)*@
    @if ((Model.ProductType == (byte)Commons.EProductType.Product) || (Model.ProductType == (byte)Commons.EProductType.Addition && (Model.AdditionType == (byte)Commons.EAdditionType.Function || Model.AdditionType == (byte)Commons.EAdditionType.Software)))
    {
        <div class="form-group" style="">
            <label class="control-label col-md-2 col-sm-2 col-xs-12">Number of Devices </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @if (Model.NumberOfDevice < 1)
                {
                    @Html.Raw("Unlimited")
                }
                else
                {
                    @Html.Raw(Model.NumberOfDevice)
                }
            </div>
        </div>
    }

    @*Number of Accounts*@
    @*Product, Account(Addition)*@
    @if ((Model.ProductType == (byte)Commons.EProductType.Product) || (Model.ProductType == (byte)Commons.EProductType.Addition && Model.AdditionType == (byte)Commons.EAdditionType.Account))
    {
        <div class="form-group" style="">
            <label class="control-label col-md-2 col-sm-2 col-xs-12">Number of Accounts </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @if (Model.NumberOfAccount < 1)
                {
                    @Html.Raw("Unlimited")
                }
                else
                {
                    @Html.Raw(Model.NumberOfAccount)
                }
            </div>
        </div>
    }

    @*Functions*@
    @*Function(Addition)*@
    @if (Model.ProductType == (byte)Commons.EProductType.Addition && Model.AdditionType == (byte)Commons.EAdditionType.Function)
    {
        <div class="form-group" style="">
            <label class="control-label col-md-2 col-sm-2 col-xs-12">Functions </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Model.NameFunction
            </div>
        </div>
    }
   
    @* Expires on *@
    <div class="form-group" style="">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">Expiry Time </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @*@if (Model.ExpiredTime.HasValue)
            {
                if (DateTime.Compare(Model.ExpiredTime.Value.Date, Commons.MaxDate.Date) >= 0)
                {
                    @Html.Raw("Never")
                }
                else
                {
                    @Model.ExpiredTime.Value.ToString(Commons.FormatDateTime)
                }
            }*@
            @ViewBag.ExpiryTimeStr
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-8 col-sm-8 col-xs-12"></label>
        <div class="col-md-4 col-sm-4 col-xs-12" style="padding-left: 120px;">
            @Html.ValidationMessage("errorItem", null, new { @class = "label lable-danger" })
        </div>
    </div>

    @*Devices Management*@
    @*Product, Function(Addition), Software(Addition)*@
    @if ((Model.ProductType == (byte)Commons.EProductType.Product) || (Model.ProductType == (byte)Commons.EProductType.Addition && (Model.AdditionType == (byte)Commons.EAdditionType.Function || Model.AdditionType == (byte)Commons.EAdditionType.Software)))
    {
        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12">Devices Management</label>
            <div class="col-md-7 col-sm-7 col-xs-12 topDotBorder" style="margin:10px 10px 0 10px;"></div>
        </div>
        <div class="form-group" style="padding-bottom: 45px; ">
            <div class="col-md-offset-2 col-md-8 col-sm-offset-2 col-sm-8 col-xs-12">
                <table id="datatable-responsive-items-devices" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action" cellspacing="0" style="width:100%;">
                    <thead style="background-color:#34495e; color:#fff;">
                        <tr>
                            <th style="text-align: center;">Devices UUID</th>
                            <th style="text-align: center;">Activated Time</th>
                            <th style="text-align: center;">Active</th>
                            <th style="text-align: center;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*@if (Model.ListItem != null && Model.ListItem.Count > 0)
                        {
                            for (int i = 0; i < Model.ListItem.Count; i++)
                            {
                                if (Model.ListItem[i].AdditionType != (byte)Commons.EAdditionType.Account)
                                {
                                    @Html.Partial("_ListItem", Model.ListItem[i])
                                }
                            }
                        }*@
                        @if (Model.ListItem != null && Model.ListItem.Any())
                        {
                            var lstItems = Model.ListItem.Where(w => w.AdditionType != (byte)Commons.EAdditionType.Account).ToList();
                            foreach (var itm in lstItems)
                            {
                                @Html.Partial("_ListItem", itm)
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    @*Accounts Management*@
    @*Product, Account(Addition)*@
    @if ((Model.ProductType == (byte)Commons.EProductType.Product) || (Model.ProductType == (byte)Commons.EProductType.Addition && Model.AdditionType == (byte)Commons.EAdditionType.Account))
    {
        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12">Accounts Management</label>
            <div class="col-md-7 col-sm-7 col-xs-12 topDotBorder" style="margin:10px 10px 0 10px;"></div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-8 col-sm-offset-2 col-sm-8 col-xs-12">
                <table id="datatable-responsive-items-accounts" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action" cellspacing="0" style="width:100%;">
                    <thead style="background-color:#34495e; color:#fff;">
                        <tr>
                            <th style="text-align: center;">Account</th>
                            <th style="text-align: center;">Activated Time</th>
                            <th style="text-align: center;">Active</th>
                            <th style="text-align: center;">Action</th>
                        </tr>
                    </thead>
                    <tbody>                       
                        @*@if (Model.ListItem != null && Model.ListItem.Count > 0)
                        {
                            for (int i = 0; i < Model.ListItem.Count; i++)
                            {
                                if (Model.ListItem[i].AdditionType == (byte)Commons.EAdditionType.Account)
                                {
                                    @Html.Partial("_ListItem", Model.ListItem[i])
                                }
                            }
                        }*@
                        @if (Model.ListItem != null && Model.ListItem.Any())
                        {
                            var lstItems = Model.ListItem.Where(w => w.AdditionType == (byte)Commons.EAdditionType.Account).ToList();
                            foreach (var itm in lstItems)
                            {
                                @Html.Partial("_ListItem", itm)
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<script src="@Url.Content("~/build/js/customInput.js")"></script>

<script>
    var _tableDeviceItem = null;
    var _settingsOptiontableDeviceItem = {
        "columnDefs": [
            { "orderable": false, "targets": [3] },
            { "width": "15%", "targets": [0] },
            { "width": "10%", "targets": [1] },
            { "width": "5%", "targets": [2] },
            { "width": "2%", "targets": [3] },
        ],
        "order": [
            [0, 'asc'],
        ],
        "displayLength": 25,
        "paging": false,
        "ordering": true,
        "info": false,
        "searching": true,
        "bLengthChange": false,
        "autoWidth": false
    };
    var _tableAccountItem = null;
    var _settingsOptiontableAccountItem = {
        "columnDefs": [
            { "orderable": false, "targets": [3] },
            { "width": "15%", "targets": [0] },
            { "width": "10%", "targets": [1] },
            { "width": "5%", "targets": [2] },
            { "width": "2%", "targets": [3] },
        ],
        "order": [
            [0, 'asc'],
        ],
        "displayLength": 25,
        "paging": false,
        "ordering": true,
        "info": false,
        "searching": true,
        "bLengthChange": false,
        "autoWidth": false
    };

    $(document).ready(function () {
        /*********** Init datatable ****************/
        var handleDataTableButtons = function () {
            if ($("#datatable-buttons").length) {
                $("#datatable-buttons").DataTable({

                    dom: "Bfrtip",
                    responsive: true
                });
            }
        };

        TableManageButtons = function () {
            "use strict";
            return {
                init: function () {
                    handleDataTableButtons();
                }
            };
        }();

        $('#datatable').dataTable();
        $('#datatable-keytable').DataTable({
            keys: true
        });

        _tableDeviceItem = $('#datatable-responsive-items-devices').DataTable($.extend(true, {}, _settingsOptiontableDeviceItem));
        _tableAccountItem = $('#datatable-responsive-items-accounts').DataTable($.extend(true, {}, _settingsOptiontableAccountItem));       
    });

    function ChaneStatus(id, status) {
        var _type = "";
        var _status = "";
        //-----------------
        if (status == 'true') {
            $('#IsActive-' + id).html('Yes').trigger('change');
            $('#Action-false-' + id).show();
            $('#Action-true-' + id).hide();            
            $('#UpdateIsActive-' + id).prop('checked', true);
        }
        else
        {
            $('#IsActive-' + id).html('No').trigger('change');
            $('#Action-false-' + id).hide();
            $('#Action-true-' + id).show(); 
            $('#UpdateIsActive-' + id).prop('checked', false);
        }
    };

</script>
