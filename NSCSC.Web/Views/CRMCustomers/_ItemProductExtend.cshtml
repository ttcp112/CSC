@{
    Layout = null;
}
@model NSCSC.Shared.Models.CRM.Customers.ProductPackageAdminModels
@using NSCSC.Shared
@Html.HiddenFor(model => model.AssetID)
<div class="row form-horizontal form-label-left">
    <div class="form-group  text-right">
        <div class="col-md-12 col-sm-12 col-xs-12">
          @*  <button class="btn btn-sm btn-danger" type="button"><i class="fa fa-times"></i>&nbsp;Cancel</button>*@
            <button type="button" disabled="disabled" id="btnCheckOut" @*href="javascript:void(0)"*@  class="btn btn-sm btn-success" data-toggle="modal" data-backdrop="static" @*data-target="#modelCheckOut"*@ onclick="LoadModalCheckOut('@Model.ExpiryDate'); return false;">
                <i class="fa fa-check"></i>&nbsp;Check Out
            </button>
        </div>
    </div>

    <div class="form-group">
        <label for="" class="col-md-2 col-sm-12 col-xs-12" style="font-size:17px;">Applied on</label>
        <div class="col-md-4 col-sm-12 col-xs-12">
            @*<select class="" id="AppliedOnDdl" style="width:100%;">
                <option value="a" selected="selected">NuPOS A</option>
                <option value="b" selected="selected">NuPOS B</option>
            </select>*@
            @Html.DropDownListFor(model => model.ProductAppliOn,
                new SelectList(Model.ListItemProduct, "Value", "Text", Model.ProductAppliOn), null,
                 new
                 {
                     @class = "form-control select2_multiple",
                     @id = "AppliedOnDdl",
                     @style = "width:100%;"
                 })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-2 col-sm-12 col-xs-12">
            @if (string.IsNullOrEmpty(Model.Image))
            {
                <img src="http://placehold.it/100x100" />
            }
            else
            {
                <img src="@Model.Image" width="100" height="100" />
            }
        </div>
        <div class="col-md-10 col-sm-12 col-xs-12">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12 font-bold" style="font-size:15px; color:#cc1018;">
                   @Model.ItemName
                </div>
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="col-md-4 col-sm-12 col-xs-12">
                        Period: @string.Format("{0}",Model.PeriodType == (byte)Commons.EPeriodType.OneTime ? "": Model.Period.ToString() )  @Model.fPeriod
                    </div>
                    <div class="col-md-4 col-sm-12 col-xs-12">
                        Expiry Time: @string.Format("{0}",Model.ExpiryDate.HasValue ? Model.ExpiryDate.Value.ToString(Commons.FormatDateTime) : "")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label for="" class="col-md-12 col-sm-12 col-xs-12" style="font-size:17px;">Extend Price List</label>
    </div>

    <div class="form-group">
        <div class="col-md-12 col-sm-12 col-xs-12 topDotBorder">
        </div>
    </div>

    <div class="box-body form-group" style="text-align:center; padding-bottom:30px;">
        @if (Model.ListPrices != null && Model.ListPrices.Any())
        {
            foreach (var item in Model.ListPrices.OrderBy(o =>o.PeriodType).ThenBy(s=>s.PeriodName))
            {
                <div class="form-group">
                    <div class="col-md-1 col-sm-12 col-xs-12"><input type="radio" name="rdextend" class="flat" onchange="GetDataExtendPrice('@Model.CustomerID', '@Model.AssetID', '@item.Period', '@item.PeriodType', '@item.Price')" /></div>
                    <div class="col-md-2 col-sm-12 col-xs-12">Extend</div>
                    <div class="col-md-2 col-sm-12 col-xs-12">@string.Format("{0}", item.PeriodType ==(byte)Commons.EPeriodType.OneTime ? item.PeriodName : item.Period.ToString()+ " "+ (item.Period > 1 ? item.PeriodName + "s" : item.PeriodName)) </div>
                    <div class="col-md-2 col-sm-12 col-xs-12">with</div>
                    <div class="col-md-2 col-sm-12 col-xs-12">@item.CurrencySymbol @item.Price.ToString("#,0.00")</div>
                </div>
            }
        }
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        init_ICheck();
        $("#AppliedOnDdl").select2({
            placeholder: "Please choose applied"
        });

        $('input').on('ifChecked', function (event) {
            if (event.target.checked)
            {
                $('[id=btnCheckOut]').removeAttr('disabled')
            } else {
                $('[id=btnCheckOut]').attr('disabled', 'disabled');
            }
           // $(event.target).trigger('change');
        });

        $('input').on('ifChanged', function (event) {
            $(event.target).trigger('change');
        })
    });

    function init_ICheck() {
        if ($("input.flat")[0]) {
            $(document).ready(function () {
                $('input.flat').iCheck({
                    checkboxClass: 'icheckbox_flat-green',
                    radioClass: 'iradio_flat-green'
                });
            });
        }
    };

    
</script>