@{
    Layout = null;
}
@model NSCSC.Shared.Models.CRM.Customers.ProductPackageAdminModels
@using NSCSC.Shared
<div class="modal fade" id="modelDetailProduct" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="closeDetail" class="close closeStore" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Detail - Products and Package</h4>
            </div>
            @*<div class="modal-body scroll" style="padding:0;" id="content-modal-detail">*@
            <div class="modal-body scroll" style="padding:0;">
                <div id="tbl-listDetail" style="padding:15px;">
                    <div class="row form-horizontal form-label-left">
                        <div class="form-group  text-right" id="ProductDetailTop">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                @* <button class="btn btn-sm btn-danger" type="button"><i class="fa fa-times"></i>&nbsp;Cancel</button>*@
                                @* <a href="javascript:void(0)" class="btn btn-sm btn-primary"><i class="fa fa-save"></i>&nbsp;Save</a>*@
                                @if (Model.PeriodType != (byte)Commons.EPeriodType.OneTime)
                                {
                                    if (Model.ExpiryDate != null && Model.ExpiryDate.Value.ToString("dd/MM/yyyy") != Commons.MinDate.ToString("dd/MM/yyyy") && Model.ActivateTime != null)
                                    {
                                        <a href="javascript:void(0)" class="btn btn-sm btn-success" data-toggle="modal" data-backdrop="static" data-target="#modelExtendProduct" onclick="ShowExtendProductPackageMana('@Model.AssetID','@Model.ItemID')">
                                            <i class="fa fa-adn"></i>&nbsp;Extend
                                        </a>
                                    }
                                }

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2 col-sm-12 col-xs-12">
                                @if (string.IsNullOrEmpty(Model.Image))
                                {
                                    <img src="http://placehold.it/100x100" />
                                }
                                else
                                {
                                    <img src="@Model.Image" width="100" height="100" />
                                }
                            </div>
                            <div class="col-md-10 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <div class="col-md-12 col-sm-12 col-xs-12 font-bold" style="font-size:15px; color:#cc1018;">
                                        @Model.ItemName
                                    </div>
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <div class="col-md-4 col-sm-12 col-xs-12">
                                            Period: @string.Format("{0}", Model.PeriodType == (byte)Commons.EPeriodType.OneTime ? "" : Model.Period.ToString()) @Model.fPeriod
                                        </div>
                                        <div class="col-md-4 col-sm-12 col-xs-12">
                                            @{ if (Model.PeriodType == (byte)Commons.EPeriodType.OneTime && Model.ExpiryDate.Value.ToString("dd/MM/yyyy") == Commons.MinDate.ToString("dd/MM/yyyy"))
                                                {
                                                    @Html.Raw("Expiry Time: Never")
                                                }
                                                else
                                                {
                                                    if (Model.PeriodType != (byte)Commons.EPeriodType.OneTime && Model.ExpiryDate.Value.ToString("dd/MM/yyyy") == Commons.MinDate.ToString("dd/MM/yyyy"))
                                                    {
                                                        @Html.Raw("Expiry Time:")
                                                    }
                                                    else
                                                    {
                                                        <div>
                                                            Expiry Time: @string.Format("{0}", Model.ExpiryDate.HasValue ? Model.ExpiryDate.Value.Date==Commons.MaxDate.Date?"Never": Model.ExpiryDate.Value.ToString(Commons.FormatDateTime) : "")
                                                        </div>
                                                    }
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        Product key can be applied on @Model.NumberOfUnit Devices
                                    </div>
                                    @if (Model.Type == (int)Commons.EProductType.Product)
                                    {
                                        string numStoreApply = "";
                                        numStoreApply = Model.ListStoreApply.Count == 0 ? "0 Store" : Model.ListStoreApply.Count.ToString() + (Model.ListStoreApply.Count > 1 ? " Store(s)" : " Store   ");
                                        <div class="col-md-12 col-sm-12 col-xs-12">

                                            Applied Stores:
                                            <a href="javascript:void(0)" class="btn btn-xs btn-success" onclick="" data-toggle="modal" data-target="#modal-choose-store">
                                                @numStoreApply
                                            </a>

                                        </div>

                                    }
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div for="" class="col-md-12 col-sm-12 col-xs-12">
                                @if (Model.IsActive)
                                {
                                    <input type="checkbox" class="js-switch-chk" checked disabled />
                                }
                                else
                                {
                                    <input type="checkbox" class="js-switch-chk" disabled />
                                }
                                Active
                            </div>
                        </div>
                        @*Product*@
                        <div class="form-group">
                            <div class="col-md-10 col-xs-offset-2 col-sm-10 col-xs-10">
                                @if (Model.Type == (int)Commons.EProductType.Package)
                                {
                                    if (Model.ListProduct != null && Model.ListProduct.Any())
                                    {
                                        foreach (var _itemProduct in Model.ListProduct)
                                        {
                                            string numStoreApply = "";
                                            numStoreApply = _itemProduct.ListStoreApply.Count == 0 ? "0 Store" : _itemProduct.ListStoreApply.Count.ToString() + (_itemProduct.ListStoreApply.Count > 1 ? " Store(s)" : " Store   ");
                                        <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                            <div class="col-md-2 col-sm-12 col-xs-12">
                                                @if (string.IsNullOrEmpty(Model.Image))
                                                {
                                                    <img src="http://placehold.it/100x100" />
                                                }
                                                else
                                                {
                                                    <img src="@_itemProduct.Image" width="100" height="100" />
                                                }
                                            </div>
                                            <div class="col-md-10 col-sm-12 col-xs-12">
                                                <div class="col-md-7 col-sm-12 col-xs-12 font-bold" style="font-size:15px; color:#cc1018;">
                                                    @_itemProduct.ItemName
                                                    <i class="fa fa-info-circle text-primary" id="showFunction" style="cursor:pointer;font-size:20px;position:absolute;margin-left:20px" data-toggle="modal" data-target="#modalfunctionInfo_@_itemProduct.AssetID"></i>
                                                </div>
                                                <div class="col-md-5 col-sm-12 col-xs-12">
                                                    Applied Stores:
                                                    <a href="javascript:void(0)" class="btn btn-xs btn-success" onclick="" data-toggle="modal" data-target="#modal-choose-store_@_itemProduct.AssetID">
                                                        @numStoreApply
                                                    </a>
                                                </div>
                                                <div class="col-md-12 col-sm-12 col-xs-12">
                                                    Expried Date: @string.Format("{0}", _itemProduct.ExpiryDate.HasValue ? _itemProduct.ExpiryDate.Value.Date == Commons.MaxDate.Date ? "Never" : _itemProduct.ExpiryDate.Value.ToString(Commons.FormatDateTime) : "")
                                                    @*@_itemProduct.ExpiryDate*@
                                                </div>
                                            </div>
                                        </div>
                                        }
                                    }
                                }

                            </div>
                        </div>
                        @*Composite*@
                        <div class="form-group">
                            <label for="" class="col-md-2 col-sm-12 col-xs-12" style="font-size:17px;">Composite</label>
                            <div class="col-md-10 col-sm-12 col-xs-12 topDotBorder">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <table id="datatable-responsive-list-composite"
                                       class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action datatable-responsive-list-detail"
                                       cellspacing="0" style="width:100%;">
                                    <thead style="background-color:#34495e; color:#fff;">
                                        <tr>
                                            <th class="text-center">Item</th>
                                            <th class="text-center">Serial No.</th>
                                            <th class="text-center">Type</th>
                                            <th class="text-center">Active</th>
                                        </tr>
                                    </thead>
                                    <tbody id="list-item-accounts">
                                        @if (Model.ListComposite != null && Model.ListComposite.Any())
                                        {
                                            foreach (var itemCoposite in Model.ListComposite.Where(x => x.ProductType == (int)Commons.EProductType.Addition))
                                            {
                                                <tr>
                                                    <td>@itemCoposite.ItemName</td>
                                                    <td>@itemCoposite.SerialNo</td>
                                                    <td>@itemCoposite.fType</td>
                                                    <td>@itemCoposite.fState</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        @*Additions*@
                        <div class="form-group">
                            <label for="" class="col-md-2 col-sm-12 col-xs-12" style="font-size:17px;">Additions</label>
                            <div class="col-md-10 col-sm-12 col-xs-12 topDotBorder">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <table id="datatable-responsive-list-additions"
                                       class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action datatable-responsive-list-detail"
                                       cellspacing="0" style="width:100%;">
                                    <thead style="background-color:#34495e; color:#fff;">
                                        <tr>
                                            <th class="text-center">Item</th>
                                            <th class="text-center">License Key/Serial No.</th>
                                            <th class="text-center">Type</th>
                                            <th class="text-center">Active</th>
                                        </tr>
                                    </thead>
                                    <tbody id="list-item-accounts">
                                        @if (Model.ListAddition != null && Model.ListAddition.Any())
                                        {
                                            foreach (var itemAdd in Model.ListAddition)
                                            {
                                                <tr>
                                                    <td>@itemAdd.ItemName</td>
                                                    <td>@itemAdd.SerialNo</td>
                                                    <td>@itemAdd.fType</td>
                                                    <td>@itemAdd.fState</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        @*Devices Management*@
                        <div class="form-group">
                            <label for="" class="col-md-3 col-sm-12 col-xs-12" style="font-size:17px;">Devices Management</label>
                            <div class="col-md-9 col-sm-12 col-xs-12 topDotBorder">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <table id="datatable-responsive-list-devices-management"
                                       class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action"
                                       cellspacing="0" style="width:100%;">
                                    <thead style="background-color:#34495e; color:#fff;">
                                        <tr>
                                            <th class="text-center">Device UUID</th>
                                            <th class="text-center">Activated Time</th>
                                            <th class="text-center">License Key</th>
                                            <th class="text-center">Active</th>
                                            <th class="text-center">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="list-item-accounts">
                                        @if (Model.ListDevice != null && Model.ListDevice.Any())
                                        {
                                            foreach (var itemDrive in Model.ListDevice)
                                            {
                                                <tr>
                                                    <td>@itemDrive.UUID</td>
                                                    <td>@string.Format("{0}", itemDrive.ActiveTime.HasValue ? itemDrive.ActiveTime.Value.ToString(Commons.FormatDateTime) : "")</td>
                                                    <td>@itemDrive.LicenseKey</td>
                                                    <td>@string.Format("{0}", itemDrive.IsActive ? "Active" : "InActive")</td>
                                                    @if (itemDrive.IsActive)
                                                    {
                                                        <td><a href="javascript:void(0)" class="btn btn-xs btn-danger" onclick="ChangeStatusDevice('@itemDrive.ID','@Model.AssetID')"><i class="fa fa-check"></i>&nbsp;Inactive</a></td>
                                                    }
                                                    else
                                                    {
                                                        <td><a href="javascript:void(0)" class="btn btn-xs btn-primary" onclick="ChangeStatusDevice('@itemDrive.ID','@Model.AssetID')"><i class="fa fa-check"></i>&nbsp;Active</a></td>
                                                    }
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
@if (Model.Type == (int)Commons.EProductType.Package)
{
    if (Model.ListProduct != null && Model.ListProduct.Any())
    {
        int i = 0;
        foreach (var _itemProduct in Model.ListProduct)
        {

        <div id="modalfunctionInfo_@_itemProduct.AssetID" class="modal fade modalfunctionInfo" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="padding:20px 15px;background-color: #f9f9f9">
                        <button type="button" id="closeFunction_@i" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="myModalLabel2" style="text-align: center; font-weight:bolder">Advanced Information</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <table id="datatable-responsive-list-devicesmanagement"
                                       class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action"
                                       cellspacing="0" style="width:100%;">
                                    <thead style="background-color:#e6e6e6;">
                                        <tr>
                                            <th style="color:#333">List of functions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="list-item-hardwares-and-services">
                                        @if (_itemProduct.ListFunction != null && _itemProduct.ListFunction.Any())
                                        {
                                            foreach (var _itemfunction in _itemProduct.ListFunction)
                                            {
                                                <tr>
                                                    <td>@_itemfunction.FunctionName</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>

        <div id="modal-choose-store_@_itemProduct.AssetID" class="modal fade modalfunctionInfo" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false">
            <div class="modal-dialog">
                <div class="modal-content" style="width:140%; margin-left:-20%">
                    <div class="modal-header" style="padding:20px 15px;background-color: #f9f9f9">
                        <button type="button" id="closeStore_@i" class="close closeStore" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="myModalLabel2" style="text-align: center; font-weight:bolder">Applied Products</h4>
                    </div>
                    <div class="modal-body scroll">
                        @*<hr style="margin:0px;" />*@
                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <a href="javascript:void(0);" class="btn btn-success" id="btnUpdateStore"  style="float:right" onclick="AssignStoreToProducts('#form-assign-store_'+@i,'@Model.AssetID','@Model.CustomerID','@i')">
                                        <i class="fa fa-check"></i>&nbsp;Update
                                    </a>
                                @using (Html.BeginForm("AssignStoreToProduct", "CRMCustomers", FormMethod.Post, new
                                {
                                    @class = "form-horizontal",
                                    @id = "form-assign-store_" + i,
                                    @enctype = "multipart/form-data"
                                }))
                                {
                                     @Html.Hidden("AssetID", _itemProduct.AssignStore.AssetID, new { id = "hidAssetID" + i })
                                    if (_itemProduct.AssignStore != null && _itemProduct.AssignStore.ListAssignStore.Any())
                                    {
                                        foreach (var _itemStore in _itemProduct.AssignStore.ListAssignStore)
                                        {
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].OffSet", _itemStore.Offset), _itemStore.Offset, new { @id = "hidOffset" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].StoreID", _itemStore.Offset), _itemStore.StoreID, new { @id = "hidAssetID" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].IsApply", _itemStore.Offset), _itemStore.IsApply, new { @id = "hidIsApply" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].StoreName", _itemStore.Offset), _itemStore.StoreName, new { @id = "hidStoreName" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].StoreType", _itemStore.Offset), _itemStore.StoreType, new { @id = "hidStoreType" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListProductApply[{0}].ActiveTime", _itemStore.Offset), _itemStore.ActivatedDate, new { @id = "hidActivatedDate" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].ExpiredDate", _itemStore.Offset), _itemStore.ExpiredDate, new { @id = "hidExpiredDate" + i + _itemStore.Offset })
                                        }
                                    }
                                     <p id="falseToApply_@i"></p>
                                    <table class="table table-striped table-bordered dt-responsive dataTable-custom datatable-responsive-list-item-products" >
                                            <caption style="margin-top:-35px; cursor:pointer;max-width:40%;" class="checkall_@i">
                                                <input type="checkbox" id="CheckAll_@i" class="lineHeight" /><span> Check All</span>
                                            </caption>
                                    <thead>
                                        <tr>
                                            <th class="text-center cols-4">Select</th>
                                            <th class="text-center cols-2">Store Name</th>
                                            <th class="text-center cols-3">Address</th>
                                            <th class="text-center cols-1">Industry</th>
                                            <th class="text-center cols-3">Activated Date</th>
                                            <th class="text-center cols-3">Expried Date</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (_itemProduct.AssignStore != null && _itemProduct.AssignStore.ListAssignStore.Any())
                                        {
                                            foreach (var _itemStore in _itemProduct.AssignStore.ListAssignStore)
                                            {

                                            <tr class="ItemClient" style="cursor:pointer">                                             
                                                <td class="text-center cols-4">
                                                    <input type="checkbox" aria-label="Checkbox for following text input" class="chkItem chkItem_@i" id="checkinput_@i@_itemStore.Offset"
                                                           @string.Format("{0}", _itemStore.IsApply ? "checked" : "") />
                                                </td>
                                                <td class="cols-2">@_itemStore.StoreName</td>
                                                <td class="cols-3">@_itemStore.Address</td>
                                                <td class="cols-1">@_itemStore.Industry</td>
                                                <td class="cols-3">@string.Format("{0}", _itemStore.ActivatedDate.HasValue? _itemStore.ActivatedDate.Value.ToString(Commons.FormatDateTime):"")</td>
                                                <td class="cols-3">@string.Format("{0}", _itemStore.ExpiredDate.HasValue ? _itemStore.ExpiredDate.Value.Date == Commons.MaxDate.Date ? "Never" : _itemStore.ExpiredDate.Value.ToString(Commons.FormatDateTime) : "")</td>
                                            </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            i++;
        }
    }
}
else
{
    if (Model.Type == (int)Commons.EProductType.Product)
    {
        if (Model.AssignStore != null && Model.AssignStore.ListAssignStore.Any())
        {
            <div id="modal-choose-store" class="modal fade modalfunctionInfo" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false">
                <div class="modal-dialog">
                    <div class="modal-content" style="width:140%; margin-left:-20%">
                        <div class="modal-header" style="padding:20px 15px;background-color: #f9f9f9">
                            <button type="button" id="closeFunction" class="close closeStore" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title" id="myModalLabel2" style="text-align: center; font-weight:bolder">Applied Products</h4>
                        </div>
                        <div class="modal-body scroll">
                            @*<hr style="margin:0px;" />*@
                            <div class="row">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <a href="javascript:void(0);" class="btn btn-success" id="btnUpdateStore" style="float:right" onclick="AssignStoreToProducts('#form-assign-store','@Model.AssetID','@Model.CustomerID','-1')">
                                        <i class="fa fa-check"></i>&nbsp;Update
                                    </a>
                                    @using (Html.BeginForm("AssignStoreToProduct", "CRMCustomers", FormMethod.Post, new
                                    {
                                        @class = "form-horizontal",
                                        @id = "form-assign-store",
                                        @enctype = "multipart/form-data"
                                    }))
                                    {                            
                                        @Html.Hidden("AssetID", Model.AssignStore.AssetID)  
                                         if (Model.AssignStore != null && Model.AssignStore.ListAssignStore.Any())
                                         {
                                             foreach (var item in Model.AssignStore.ListAssignStore)
                                             {
                                                @Html.Hidden(string.Format("ListAssignStore[{0}].OffSet", item.Offset), item.Offset, new { @id = "hidOffset" + item.Offset })
                                                @Html.Hidden(string.Format("ListAssignStore[{0}].StoreID", item.Offset), item.StoreID, new { @id = "hidAssetID" + item.Offset })
                                                @Html.Hidden(string.Format("ListAssignStore[{0}].IsApply", item.Offset), item.IsApply, new { @id = "hidIsApply" + item.Offset })
                                                @Html.Hidden(string.Format("ListAssignStore[{0}].StoreName", item.Offset), item.StoreName)
                                                @Html.Hidden(string.Format("ListAssignStore[{0}].StoreType", item.Offset), item.StoreType)
                                                @Html.Hidden(string.Format("ListProductApply[{0}].ActiveTime", item.Offset), item.ActivatedDate)
                                                @Html.Hidden(string.Format("ListAssignStore[{0}].ExpiredDate", item.Offset), item.ExpiredDate)
                                             }
                                         }
                                         <p id="falseToApply"></p>
                                        <table class="table table-striped table-bordered dt-responsive dataTable-custom datatable-responsive-list-item-products" >
                                            <caption style="margin-top:-35px; cursor:pointer;max-width:40%;" class="checkall">
                                                <input type="checkbox" id="CheckAll" class="lineHeight" /><span> Check All</span>
                                            </caption>
                                            <thead>
                                                <tr>
                                                    <th class="text-center cols-4">Select</th>
                                                    <th class="text-center cols-2">Store Name</th>
                                                    <th class="text-center cols-3">Address</th>
                                                    <th class="text-center cols-1">Industry</th>
                                                    <th class="text-center cols-3">Activated Date</th>
                                                    <th class="text-center cols-3">Expried Date</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.AssignStore != null && Model.AssignStore.ListAssignStore.Any())
                                                {
                                                    foreach (var item in Model.AssignStore.ListAssignStore)
                                                    {

                                                    <tr class="ItemClient" style="cursor:pointer; width:100%">                                                       
                                                        <td class="text-center cols-4">
                                                            <input type="checkbox" aria-label="Checkbox for following text input" class="chkItem " id="checkinput_@item.Offset"
                                                                   @string.Format("{0}", item.IsApply ? "checked" : "") />
                                                        </td>
                                                        <td class="cols-2">@item.StoreName</td>
                                                        <td class="cols-3">@item.Address</td>
                                                        <td class="cols-1">@item.Industry</td>
                                                        <td class="cols-3">@string.Format("{0}", item.ActivatedDate.HasValue ? item.ActivatedDate.Value.ToString(Commons.FormatDateTime) : "")</td>
                                                        <td class="cols-3">@string.Format("{0}", item.ExpiredDate.HasValue ? item.ExpiredDate.Value.Date == Commons.MaxDate.Date ? "Never" : item.ExpiredDate.Value.ToString(Commons.FormatDateTime) : "")</td>

                                                    </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                     }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}

<script type="text/javascript">
    var mode = 0;
    $(document).ready(function () {
        init_Switch();
        $('.ItemClient').click(function (event) {
            if (event.target.type != 'checkbox') {
                mode = 0;
                $('.chkItem', this).trigger('click');
            }
        });
    });
    function init_Switch() {
        if ($(".js-switch")[0]) {
            var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));
            elems.forEach(function (html) {
                var switchery = new Switchery(html, {
                    color: '#26B99A'
                });
            });
        }
        if ($(".js-switch-chk")[0]) {
            var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch-chk'));
            elems.forEach(function (html) {
                if (html.style.display != "none") {
                    var switchery = new Switchery(html, {
                        color: '#26B99A'
                    });
                }
            });
        }
    };
    @if (Model.Type == (int)Commons.EProductType.Product)
    {
        if (Model.AssignStore != null && Model.AssignStore.ListAssignStore.Any())
        {
            foreach (var item in Model.AssignStore.ListAssignStore)
            {
            <text>
                $("#checkinput_"+@item.Offset).click(function () {
                    if ($(this).is(':checked')) {
                        $("#hidIsApply"+@item.Offset).val(true);
                    } else {
                        $("#hidIsApply"+@item.Offset).val(false);
                    }
                    checkAllItem();
                })
            </text>
            }
            <text>
                $('.checkall').click(function (event) {
                    if (event.target.type != 'checkbox') {
                        $('#CheckAll').trigger('click');
                    }
                });
                var _Count = '@Model.AssignStore.ListAssignStore.Count';
                $("#CheckAll").click(function () {
                    mode = 1;
                    for (var i = 0; i < _Count; i++) {
                        if ($(this).is(':checked')) {
                            if ($("#checkinput_" + i).is(':checked')) {
                            } else {
                                $("#checkinput_" + i).trigger("click");
                            }
                        } else {
                            if ($("#checkinput_" + i).is(':checked')) {
                                $("#checkinput_" + i).trigger("click");
                            } else {
                            }
                        }
                    }
                });            
                function checkAllItem() {
                    var s = 0;
                    for (var i = 0; i < _Count; i++) {
                        if ($("#checkinput_" + i).is(':checked'))
                            s++;
                    }                
                    if (s == _Count) {
                        if ($("#CheckAll").is(':checked')) { }
                        else {
                            $("#CheckAll").trigger("click");
                        }
                    } else {
                        if (mode == 0)
                            $("#CheckAll").removeAttr("checked");
                    }
                }
                checkAllItem();
            </text>
        }
    }
    else {
        if (Model.Type == (int)Commons.EProductType.Package) {
            if (Model.ListProduct != null && Model.ListProduct.Any()) {
                int i = 0;
                <text>
                var _Count = new Array();
                function checkAllItem(i) {
                    var s = 0;
                    for (var j = 0; j < _Count[i]; j++) {
                        if ($("#checkinput_" + i + j).is(':checked'))
                            s++;
                    }
                    if (s == _Count[i]) {
                        if ($("#CheckAll_" + i).is(':checked')) { }
                        else {
                            $("#CheckAll_" + i).trigger("click");
                        }
                    } else {
                        if (mode == 0)
                            $("#CheckAll_" + i).removeAttr("checked");
                    }
                }
                 </text>
                foreach (var item in Model.ListProduct)
                {
                    if (item.AssignStore != null && item.AssignStore.ListAssignStore.Any()) {
                        foreach (var _itemStore in item.AssignStore.ListAssignStore)
                        {
                             <text>
                              $("#checkinput_" +@i+@_itemStore.Offset).click(function () {
                                  if ($(this).is(':checked')) {
                                      $("#hidIsApply" +@i+@_itemStore.Offset).val(true);
                                  } else {
                                      $("#hidIsApply" +@i+@_itemStore.Offset).val(false);
                                  }
                                  checkAllItem(@i);
                              });
                            </text>
                        }
                    }
                     <text>
                        $('.checkall_'+@i).click(function (event) {
                            if (event.target.type != 'checkbox') {
                                $('#CheckAll_'+@i).trigger('click');
                            }
                        });
                        _Count.push('@item.AssignStore.ListAssignStore.Count');
                        $("#CheckAll_" +@i).click(function () {
                            mode = 1;
                            var i = '@i';
                            for (var j = 0; j < _Count[i]; j++) {
                                if ($(this).is(':checked')) {
                                    if ($("#checkinput_" + @i+j).is(':checked')) {
                                    } else {
                                        $("#checkinput_" + @i+j).trigger("click");
                                    }
                                } else {
                                    if ($("#checkinput_" + @i+j).is(':checked')) {
                                        $("#checkinput_" + @i+j).trigger("click");
                                    } else {
                                    }
                                }
                            }
                        });                     
                        checkAllItem(@i);
                    </text>
                    i++;
                }
            }
        }
    };
    $('.datatable-responsive-list-item-products').DataTable(
    {
        "columnDefs": [
            { "orderable": false, "targets": [0] }
        ],
        "order": [
            [1, 'asc']
        ],
        "bInfo": false,
        "paging": false,
        "autoWidth": false,
        "drawCallback": function () {
            var divHeight = $('.datatable-responsive-list-item-products tbody').prop('scrollHeight');
            if (divHeight == 0) {
                var previousCss = $("#modal-choose-items").attr("style");
                $("#modal-choose-items").css({
                    position: 'absolute',
                    visibility: 'hidden',
                    display: 'block'
                });
                divHeight = $('.datatable-responsive-list-item-products tbody').prop('scrollHeight');
                $("#modal-choose-items").attr("style", previousCss ? previousCss : "");
            }
            if (divHeight > 500) {
                $(".datatable-responsive-list-item-products thead tr").css('width', 'calc( 100% - 16px )');
            } else {
                $(".datatable-responsive-list-item-products thead tr").css('width', '100%');
            }
        },
    });    
    function ChangeStatusDevice(_DeviceID, _AssetID) {
    $.ajax({
            url: CreateAbsoluteUrl('ChangeStatusDevice'),
        type: "POST",
        data: { DeviceID: _DeviceID, AssetID: _AssetID },
        dataType: 'html',
        beforeSend: function () {
            $('.se-pre-con').show();
            },
        complete: function () {
            $('.se-pre-con').hide();
            },
        success: function (data) {
            $('[id=content-modal-detail]').html(data);
            },
        error: function (jqXHR, textStatus, errorThrown) {
            $('.se-pre-con').hide();
            }
        });
    };
    function AssignStoreToProducts(form, AssetID, CustomerID, i) {
        $.ajax({
            url: CreateAbsoluteUrl('AssignStoreToProduct'),
            type: "POST",
            data:  $(form).serialize(),
            dataType: 'html',
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            complete: function () {
                $('.se-pre-con').hide();
            },
            success: function (data) {
                data = JSON.parse(data);
                if (data == true) {
                    $('button.closeStore').trigger("click");
                    ShowDetailProductPackageMana(AssetID, CustomerID);
                }
                else {
                    if (i == -1) 
                        $("#falseToApply").html('<span class="label-danger" style = "padding: 0 20px;border-radius: 5px;color: white;">Apply false </span>');
                    else
                        $("#falseToApply_" + i).html('<span class="label-danger" style = "padding: 0 20px;border-radius: 5px;color: white;">Apply false </span>');
                    return false;
                }                 
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.statusText);
                $('.se-pre-con').hide();
            }
        });
    }
</script>