@model NSCSC.Shared.Models.ClientSite.MyStoreAndBusiness.StoreDetailModels
@{
    ViewBag.Title = "Store Information";
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.ID;
}

@using (@Html.BeginForm("UpdateStoreInfo", "MyStoreAndBusiness", FormMethod.Post,
    new
    {
        @class = "form-horizontal edit-form",
        @enctype = "multipart/form-data",
        @id = "form-store-info",
    }))
{
    @Html.HiddenFor(model => model._action)
    @Html.HiddenFor(model => model.ApplyProductCount)

    if (!string.IsNullOrEmpty(Model.ID))
    {
        @Html.Hidden("ID", Model.ID)
        @Html.Hidden("ImageURL", Model.ImageURL)
    }
    <div class="row">
        <div class="col-md-3 col-sm-3 col-xs-12">
            <div class="col-md-12 col-sm-12 col-xs-12 reset-padding-left-right width-height-200 border-radius-img" style="overflow: hidden;">
                <!--Image Placeholder-->
                <div class="col-md-12 col-sm-12 col-xs-12 reset-padding-left-right">
                    <img id="upload-preview-store-information" src="@Model.ImageURL" class="width-height-200" />
                </div>
                <!--element choose change-->
                <div class="col-md-12 col-sm-12 col-xs-12 ele-choose-change">
                    <div class="upload-i-wrapper ele-choose-change-input">
                        @Html.TextBoxFor(model => model.PictureUpload, new
                           {
                               @id = "PictureUploadStore",
                               @type = "file",
                               @onchange = "PreviewImage(this,\"upload-preview-store-information\")",
                               @accept = "*.jpg"
                           })
                        <a href="javascript:void(0);" class="text-white">Change</a>
                    </div>
                </div>
            </div>

            <!--msg image error-->
            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.ValidationMessageFor(model => model.PictureUpload, null, new { @class = "label label-danger" })
            </div>
            <!--Active Store-->
            <div class="col-md-12 col-sm-12 col-xs-12 text-center" style="margin-top:10px;">
                @Html.CheckBoxFor(model => model.IsActive, new { @id = "chkActive", @class = "js-switch-store" }) Active
            </div>
        </div>

        <div class="col-md-9 col-sm-9 col-xs-12">
            @*Applied on*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Applied on
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    <button type="button" class="btn btn-view-detail" id="btnStoreAppliedProducts"
                            onclick="ShowModalAppliedProducts('#div-content-store-applied-products', '@Model.ID')">
                        @Model.ApplyProductCount
                    </button>
                </div>
            </div>

            <!-- show row when action is [Add New] -->
            @if (Model._action.Equals("add_new"))
            {
                @*Type Store*@
                <div class="form-group">
                    <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    </div>
                    <div class="col-md-10 col-sm-10 col-xs-12 reset-padding-left-right ">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.IsNew, "true", new { @checked = "checked", @class = "flat-store-info", @name = "" })
                            Create New Store
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.IsNew, "false", new { @class = "flat-store-info", @name = "" })
                            Choose from Existing Store
                        </label>
                    </div>
                </div>
            }

            @*Store Name*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Store Name *
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.TextBoxFor(model => model.Name, new { name = "Name", @class = "form-control", autocomplete = "off", placeholder = "Store's Name" })
                    @Html.ValidationMessageFor(model => model.Name, null, new { @class = "label label-danger" })
                </div>
            </div>

            @*Email*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Email *
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.TextBoxFor(model => model.Email, new { @id = "txtName", @class = "form-control", autocomplete = "off", @placeholder = "store@gmail.com" })
                    @Html.ValidationMessageFor(model => model.Email, null, new { @class = "label" })
                </div>
            </div>

            @*Phone*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Phone *
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.TextBoxFor(model => model.Phone, new { @id = "txtPhone", @class = "form-control", autocomplete = "off", placeholder = "0123456789" })
                    @Html.ValidationMessageFor(model => model.Phone, null, new { @class = "label label-danger" })
                </div>
            </div>

            @*Tax No.*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Tax No.
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.TextBoxFor(model => model.GSTRegNo, new { @id = "txtTaxNo", @class = "form-control", autocomplete = "off", placeholder = "Tax No." })
                    @Html.ValidationMessageFor(model => model.GSTRegNo, null, new { @class = "label label-danger" })
                </div>
            </div>

            @*Time Zone*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Time Zone
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.DropDownListFor(model => model.TimeZone,
                    new SelectList(@ViewBag.TimeZones),
                     new
                     {
                         @class = "form-control",
                         @id = "StoreTimeZone",
                         @style = "width:100%;",
                         placeholder = "Enter Time Zone"
                     })
                    @Html.ValidationMessageFor(model => model.TimeZone, null, new { @class = "label" })
                </div>
            </div>

            @*line*@
            <div class="form-group">
                <div class="col-md-1 col-sm-12 col-xs-12 height-30 reset-padding-left-right">
                    <hr style="width:50px; border: 1.5px solid #e0e0e2;" />
                </div>
            </div>

            @*City*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    City
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.TextBoxFor(model => model.City, new { @id = "txtCity", @class = "form-control", autocomplete = "off", placeholder = "City" })
                    @Html.ValidationMessageFor(model => model.City, null, new { @class = "label" })
                </div>
            </div>

            @*Zip Code*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Zip Code
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.TextBoxFor(model => model.ZipCode, new { @id = "txtZipCode", @class = "form-control", autocomplete = "off", placeholder = "Zip code" })
                    @Html.ValidationMessageFor(model => model.ZipCode, null, new { @class = "label" })
                </div>
            </div>

            @*Country*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Country
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.DropDownListFor(model => model.Country,
                    new SelectList(@ViewBag.ListCountry, "Name", "Name", Model.Country), "",
                     new
                     {
                         @class = "form-control",
                         @id = "ddlCountryStore",
                         @style = "width:100%;",
                         placeholder = "Enter Country"
                     })
                    @Html.ValidationMessageFor(model => model.Country, null, new { @class = "label" })
                </div>
            </div>

            @*Address*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                    Address
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    @Html.TextAreaFor(model => model.Street,
                    new {
                        @class = "form-control",
                        @autocomplete = "off",
                        @placeholder = "Address",
                        @row ="3",
                        @style = "resize:none;"
                    })
                    @Html.ValidationMessageFor(model => model.Street, null, new { @class = "label" })
                </div>
            </div>

            @*Action*@
            <div class="form-group">
                <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                </div>
                <div class="col-md-5 col-sm-10 col-xs-12">
                    <ul class="header-buttons list-inline">
                        <li>
                            <a href="javascript:void(0);" class="btn btn-cyan" style="width: 150px;" id="btn-actives" onclick="SubmitForm('#form-store-info')">Save</a>
                        </li>
                        <li>
                            <a href="javascript:void(0);" class="btn text-cyan bg-white" data-dismiss="modal">
                                Cancel
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

        </div>
    </div>

    <!--MODAL-STORE-INFO-LIST-PRODUCT FOR CREATE STORE-->
    <div id="modal-store-info-list-product-create-store" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg-950">
            <div class="modal-content">
                <div class="modal-header bg-white" style="padding:20px; border-bottom:none;">
                    <h4 class="modal-title text-uppercase font-bold text-left">Store Information</h4>
                </div>
                <div class="modal-body">
                    <div class="row form-label-left" style="padding:40px;">
                        <div class="row">
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div class="col-md-12 col-sm-12 col-xs-12 reset-padding-left-right width-height-200 border-radius-img" style="overflow: hidden;">
                                    <!--Image Placeholder-->
                                    <div class="col-md-12 col-sm-12 col-xs-12 reset-padding-left-right">
                                        <img id="upload-preview-store-applied-products" src="@Model.ImageURL" class="width-height-200" />
                                    </div>
                                </div>

                                <!--msg image error-->
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @Html.ValidationMessageFor(model => model.PictureUpload, null, new { @class = "label label-danger" })
                                </div>
                                <!--Active Store-->
                                <div class="col-md-12 col-sm-12 col-xs-12 text-center" style="margin-top:10px;">
                                    @Html.CheckBoxFor(model => model.IsActive, new { @id = "chkActiveAppliedProducts", @class = "js-switch-store-applied-products", @disabled = "disabled" }) Active
                                </div>
                            </div>

                            <div class="col-md-9 col-sm-9 col-xs-12">
                                @*Applied on*@
                                <div class="form-group">
                                    <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                                        Applied on
                                    </div>
                                    <div class="col-md-5 col-sm-10 col-xs-12">
                                        <button type="button" class="btn btn-view-detail" id="btnPopupStoreAppliedProducts">@Model.ApplyProductCount</button>
                                    </div>
                                </div>

                                @*list Product*@
                                <div class="form-group">
                                    <div class="col-md-12 col-sm-12 col-xs-12 reset-padding-left-right" style="border:1px solid #f2f2f2;">
                                        <div class="table-responsive" style="overflow-x:hidden;">
                                            <div class="x_panel">
                                                <div class="x_title text-left" style="padding-left:20px;">
                                                    <h2></h2>
                                                    <div class="clearfix"></div>
                                                </div>
                                                <div class="x_content">
                                                    <table id="datatable-responsive-list-product-create-store"
                                                           class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action text-left"
                                                           role="grid" aria-describedby="example_info" cellspacing="0" style="width:100%;">
                                                        <thead style="background-color:#D9E0E8; color:#000;">
                                                            <tr>
                                                                <th class="text-center">@*<input type="checkbox" class="flat-product" />*@</th>
                                                                <th class="text-center">Product</th>
                                                                <th class="text-center">Activated Date</th>
                                                                <th class="text-center">Expired Date</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (@Model.ListProductApply != null && @Model.ListProductApply.Count > 0)
                                                            {
                                                                for (int i = 0; i < @Model.ListProductApply.Count; i++)
                                                                {
                                                                    var @item = @Model.ListProductApply[i];
                                                                    <tr class="">
                                                                        <td class="text-center">
                                                                            @Html.CheckBox(string.Format("ListProductApply[{0}].IsApply", item.OffSet), item.IsApply,
                                                                           new { @class="flat-product", @id = "chkProducts_" + item.OffSet })

                                                                            @Html.Hidden(string.Format("ListProductApply[{0}].OffSet", item.OffSet), item.OffSet, new { @id = "hidOffset" + item.OffSet })
                                                                            @Html.Hidden(string.Format("ListProductApply[{0}].AssetID", item.OffSet), item.AssetID, new { @id = "hidAssetID" + item.OffSet })
                                                                            @Html.Hidden(string.Format("ListProductApply[{0}].ProductName", item.OffSet), item.ProductName)
                                                                            @Html.Hidden(string.Format("ListProductApply[{0}].ActiveTime", item.OffSet), item.ActiveTime)
                                                                            @Html.Hidden(string.Format("ListProductApply[{0}].ExpiredTime", item.OffSet), item.ExpiredTime)
                                                                            @Html.Hidden(string.Format("ListProductApply[{0}].sActiveTime", item.OffSet), item.sActiveTime)
                                                                            @Html.Hidden(string.Format("ListProductApply[{0}].sExpiredTime", item.OffSet), item.sExpiredTime)

                                                                        </td>
                                                                        <td style="font-size:12px;">@item.ProductName</td>
                                                                        <td class="text-center">@item.sActiveTime</td>
                                                                        <td class="text-center">@item.sExpiredTime</td>
                                                                    </tr>
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @*Action*@
                                <div class="form-group">
                                    <div class="col-md-2 col-sm-2 col-xs-12 height-30 reset-padding-left-right">
                                    </div>
                                    <div class="col-md-5 col-sm-10 col-xs-12">
                                        <ul class="header-buttons list-inline">
                                            <li>
                                                <a href="javascript:void(0);" class="btn btn-cyan" style="width: 150px;"
                                                   onclick="DoneAllyProductForCreateStore()" aria-hidden="true">Done</a>
                                            </li>
                                            <li>
                                                <a href="javascript:void(0);" class="btn text-cyan bg-white" onclick="DoneAllyProductForCreateStore()" aria-hidden="true">
                                                    Cancel
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlCountryStore").select2({
            placeholder: 'Please choose Country',
            dropdownParent: $("#modal-store-info") //enable search in select2
        });

        $("#StoreTimeZone").select2({
            placeholder: 'Please choose Time Zone',
            dropdownParent: $("#modal-store-info") //enable search in select2
        });

        $('#datatable-responsive-list-product-create-store').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": 0 },
                { "width": "1%", "targets": [0] },
            ],
            "order": [
                [1, "asc"],
            ],
            "searching": true,
            "info": false,
            "lengthChange": false,
            "paging": false,
            "displayLength": 25,
            "sPaginationType": "numbers",//hide Pre|Next on row footer
            "ordering": true, //hide Order on row header
            "destroy": true,
        });

        init_ICheckProduct();
        init_SwitcheryAppliedProducts();

        init_ICheck();
        init_Switchery();
    });

    // iCheck
    function init_ICheck() {
        if ($("input.flat-store-info")[0]) {
            $(document).ready(function () {
                $('input.flat-store-info').iCheck({
                    checkboxClass: 'icheckbox_flat-blue',
                    radioClass: 'iradio_flat-blue'
                });
            });
        }
    };

    // Switchery
    function init_Switchery() {
        if ($(".js-switch-store")[0]) {
            var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch-store'));
            elems.forEach(function (html) {
                var switchery = new Switchery(html, {
                    color: '#26B99A'
                });
            });
        }
    };

    // iCheck
    function init_ICheckProduct() {
        if ($("input.flat-product")[0]) {
            $(document).ready(function () {
                $('input.flat-product').iCheck({
                    checkboxClass: 'icheckbox_flat-green',
                    radioClass: 'iradio_flat-green'
                });
            });
        }
    };

    // Switchery
    function init_SwitcheryAppliedProducts() {
        if ($(".js-switch-store-applied-products")[0]) {
            var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch-store-applied-products'));
            elems.forEach(function (html) {
                var switchery = new Switchery(html, {
                    color: '#26B99A'
                });
            });
        }
    };

    $("#form-store-info").submit(function (e) {
        var id = '@_ID';
        var Action = "";
        if (id == null || id.length == 0)
            Action = "CreateStoreInfo";
        else
            Action = "UpdateStoreInfo";
        var isSubmit = $(this).valid();
        if (isSubmit) {
            $.ajax({
                url: CreateAbsoluteUrl(Action),
                type: "POST",
                data: new FormData(this),
                processData: false,
                contentType: false,
                success: function (data) {
                    if (Action == "CreateStoreInfo") {
                        window.location = "/MyStoreAndBusiness";
                    }
                    $("#modal-store-info").modal('hide');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //$("#tabStore").html(jqXHR.responseText);
                },
                beforeSend: function () {
                    $('.se-pre-con').show();
                },
                complete: function () {
                    $('.se-pre-con').hide();
                },
            });
        }
        e.preventDefault();
    });

    //---load Time Zone
    $("#ddlCountryStore").change(function () {
        var _countryName = this.value;
        LoadTimeZone(_countryName);
    });

    function LoadTimeZone(_countryName) {
        $.ajax({
            url: '@Url.Action("LoadTimeZone", "MyStoreAndBusiness")',
            type: "POST",
            traditional: true,
            data: { countryName: _countryName },
            dataType: 'json',
            success: function (lstTimeZone) {
                ReLoadOptionTimeZone(lstTimeZone);
            }
        });
    }

    function ReLoadOptionTimeZone(lstTimeZone) {
        $("#StoreTimeZone").empty();
        lstTimeZone.forEach(function (el) {
            var option = new Option(el, el, true, true);
            $("#StoreTimeZone").append(option).trigger('change.select2');
        });
        $("#StoreTimeZone").val(lstTimeZone[0]).trigger('change.select2');
    }
    //---End load Time Zone

</script>