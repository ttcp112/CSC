@model NSCSC.Shared.Models.ClientSite.MyStoreAndBusiness.MyStoreAndBusinessViewModels
@{
    ViewBag.Title = "Merchant Information";
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.MerchantInfo.ID;
}
@Html.HiddenFor(model => model.MerchantInfo.ID)
@if (!string.IsNullOrEmpty(_ID))
{
    @Html.HiddenFor(model => model.MerchantInfo.CusMerchantID)
    @Html.HiddenFor(model => model.MerchantInfo.ImageURL)
    @Html.HiddenFor(model => model.MerchantInfo.CloudWebHQ)
}

<div class="row">
    <div class="row form-horizontal form-label-left" style="margin-top:20px;">
        <div class=" col-md-offset-3 col-md-9 col-sm-12 col-xs-12 text-left">
            <span class="text-required" style="font-style:italic; color:darkred;">(*) Required fields</span>
        </div>
    </div>



    <div class="row form-horizontal form-label-left merchant-ifo">

        <div class="row">
            <div class="col-md-3 col-sm-3 col-xs-12 reset-padding-left-right width-height-200 border-radius-img merchant-img" style="overflow: hidden;">
                <!--Image Placeholder-->
                <div class="col-md-12 col-sm-12 col-xs-12 reset-padding-left-right">
                    <img id="upload-preview" src="@Model.MerchantInfo.ImageURL" class="width-height-200" />
                </div>
                <!--element choose change-->
                <div class="col-md-12 col-sm-12 col-xs-12 ele-choose-change">
                    <div class="upload-i-wrapper ele-choose-change-input">
                        @Html.TextBoxFor(model => model.MerchantInfo.PictureUpload, new
                           {
                               @id = "PictureUpload",
                               @type = "file",
                               @onchange = "PreviewImage(this,\"upload-preview\")",
                               @accept = "*.jpg"
                           })
                        <a href="javascript:void(0);" class="text-white">Change</a>
                    </div>
                </div>
                <!--msg image error-->
                <div class="col-md-12 col-sm-12 col-xs-12" style="margin:5px;">
                    @Html.ValidationMessageFor(model => model.MerchantInfo.PictureUpload, null, new { @class = "label label-danger" })
                </div>

            </div>
            <div class="col-md-9 col-sm-9 col-xs-12 merchant-ifo-filed">
                @*Name*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                        Merchant Name *
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-12">
                        @Html.TextBoxFor(model => model.MerchantInfo.Name, new { @id = "txtName", @class = "form-control", autocomplete = "off", placeholder = "Your Name" })
                        @Html.ValidationMessageFor(model => model.MerchantInfo.Name, null, new { @class = "label label-danger" })
                    </div>
                </div>

                @*Email*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                        Email *
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-12">
                        @Html.TextBoxFor(model => model.MerchantInfo.Email, new { @id = "txtEmail", @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.MerchantInfo.Email, null, new { @class = "label" })
                    </div>
                </div>

                @*Phone*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                        Phone *
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-12">
                        @Html.TextBoxFor(model => model.MerchantInfo.Phone, new { @id = "txtPhone", @class = "form-control", autocomplete = "off", placeholder = "0123456789" })
                        @Html.ValidationMessageFor(model => model.MerchantInfo.Phone, null, new { @class = "label label-danger" })
                    </div>
                </div>

                @*Tax Code*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                        NRIC
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-12">
                        @Html.TextBoxFor(model => model.MerchantInfo.GSTRegNo, new { @id = "txtGSTRegNo", @class = "form-control", autocomplete = "off", placeholder = "0123456789" })
                        @Html.ValidationMessageFor(model => model.MerchantInfo.GSTRegNo, null, new { @class = "label label-danger" })
                    </div>
                </div>

                @*Address*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30 text-uppercase font-bold">
                        Address
                    </div>
                    <div class="col-md-10 col-sm-10 col-xs-12">
                    </div>
                </div>

                @*City*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                        City
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-12">
                        @Html.TextBoxFor(model => model.MerchantInfo.City, new { @id = "txtCity", @class = "form-control", autocomplete = "off", placeholder = "City" })
                        @Html.ValidationMessageFor(model => model.MerchantInfo.City, null, new { @class = "label" })
                    </div>
                </div>

                @*Zip Code*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                        Zip Code
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-12">
                        @Html.TextBoxFor(model => model.MerchantInfo.ZipCode, new { @id = "txtZipCode", @class = "form-control", autocomplete = "off", placeholder = "Zip code" })
                        @Html.ValidationMessageFor(model => model.MerchantInfo.ZipCode, null, new { @class = "label" })
                    </div>
                </div>

                @*Country*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                        Country
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-12">
                        @Html.DropDownListFor(model => model.MerchantInfo.Country,
                        new SelectList(@ViewBag.ListCountry, "Name", "Name", Model.MerchantInfo.Country), "",
                         new
                         {
                             @class = "form-control ddlCountry",
                             @id = "ddlCountryMerchant",
                             @style = "width:100%;",
                             @tabindex = "-1",
                             placeholder = "Enter Country"

                         })
                        @Html.ValidationMessageFor(model => model.MerchantInfo.Country, null, new { @class = "label" })
                    </div>
                </div>

                @*Address*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                        Address
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-12">
                        @Html.TextAreaFor(model => model.MerchantInfo.Street,
                                    new {
                                        @class = "form-control",
                                        @autocomplete = "off",
                                        @placeholder = "Address",
                                        @row ="3",
                                        @style = "resize:none;"
                                    })
                        @Html.ValidationMessageFor(model => model.MerchantInfo.Street, null, new { @class = "label" })
                    </div>
                </div>

                @*Action*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-2 col-xs-12 height-30">
                    </div>
                    <div class="col-md-10 col-sm-10 col-xs-12 text-left">
                        <ul class="header-buttons list-inline btn-merchant-detail">
                            <li>
                                <button href="javascript:void(0);" type="button" class="btn text-uppercase btn-cyan text-white"
                                        style="width: 150px;" id="btn-actives"
                                        onclick="SubmitForm('#form-merchant')">
                                    Update
                                </button>
                            </li>
                            @if (Model.IsReseller)
                            {
                                <li>
                                    <a href="@Url.Action("ListMerchant")" class="btn text-uppercase btn-cyan text-white" style="width: 168px;">
                                        List Merchant
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>

                @*Store Info*@
                <div class="form-group">
                    <div class="col-md-3 col-sm-3 col-xs-12 height-30 text-uppercase font-bold">
                        Store Info
                    </div>
                    <div class="col-md-10 col-sm-10 col-xs-12">
                    </div>
                </div>
                <div class="form-group form-group-merchant-infor-detail">
                    <div class="col-md-12 col-sm-12 col-xs-12 reset-padding-left-right" style="border:1px solid #f2f2f2;">
                        @*list store*@
                        <div class="table-responsive" style="overflow-x:hidden;">
                            <div class="x_panel">
                                <div class="x_title text-left" style="padding-left:20px;">
                                    <h2 style="font-size:16px;">
                                        <a href="javascript:void(0);" class="btn btn-view-detail" onclick="ShowModalStoreInformation('#div-content-store-information', '')">
                                            <i class="fa fa-plus"></i> Add new
                                        </a>
                                        <small class="text-italic" style="font-size:12px;">
                                            <span id="lblRemainingStore">0</span> left remaining stores
                                        </small>
                                    </h2>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="x_content">
                                    <table id="datatable-responsive-list-store" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action text-left" role="grid" aria-describedby="example_info" cellspacing="0" style="width:100%;">
                                        <thead style="background-color:#D9E0E8; color:#000;">
                                            <tr>
                                                <th class="text-center">Store Name</th>
                                                <th class="text-center">Expiry Time</th>
                                                <th class="text-center">Status</th>
                                                <th class="text-center"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (@Model.MerchantInfo.ListStore != null && @Model.MerchantInfo.ListStore.Count > 0)
                                            {
                                                for (int i = 0; i < @Model.MerchantInfo.ListStore.Count; i++)
                                                {
                                                    var @itemStore = @Model.MerchantInfo.ListStore[i];
                                                    <tr>
                                                        <td class="text-center">@itemStore.Name</td>
                                                        <td class="text-center">@itemStore.sExpiredDate</td>
                                                        <td class="text-center">@itemStore.sStatus</td>
                                                        <td style="text-align:center;">
                                                            <a href="javascript:void(0)"
                                                               onclick="ShowModalStoreInformation('#div-content-store-information', '@itemStore.ID')"
                                                               class="">View/Edit</a>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row text-center">
        </div>
    </div>
</div>

<!--MODAL-STORE-INFORMATION-->
<div id="modal-store-info" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg-950">
        <div class="modal-content">
            <div class="modal-header bg-white" style="padding:20px; border-bottom:none;">
                <h4 class="modal-title text-uppercase font-bold text-left">Store Information</h4>
            </div>
            <div class="modal-body">
                <div class="row form-label-left" style="padding:40px;" id="div-content-store-information">
                </div>
            </div>
        </div>
    </div>
</div>

<!--MODAL-STORE-INFO-LIST-PRODUCT-->
<div id="modal-store-info-list-product" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg-950">
        <div class="modal-content">
            <div class="modal-header bg-white" style="padding:20px; border-bottom:none;">
                <h4 class="modal-title text-uppercase font-bold text-left">Store Information</h4>
            </div>
            <div class="modal-body">
                <div class="row form-label-left" style="padding:40px;" id="div-content-store-applied-products">
                </div>
            </div>
        </div>
    </div>
</div>

<!--MODAL-INDUSTRY-->
<div id="modal-industry-info" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg-550">
        <div class="modal-content">
            <div class="modal-header bg-white" style="padding:20px; border-bottom:none;">
                <h4 class="modal-title text-uppercase font-bold text-left">WHAT TYPE OF INDUSTRY YOU WANT TO ADD?</h4>
            </div>
            <div class="modal-body">
                <div class="">
                    <table>
                        @if (Model.StoreInfo != null && Model.StoreInfo.ListIndustry != null && Model.StoreInfo.ListIndustry.Any())
                        {
                            for (int i = 0; i < Model.StoreInfo.ListIndustry.Count; i++)
                            {
                                <tr style="vertical-align: initial" data-id="@Model.StoreInfo.ListIndustry[i].Value" class="cls-industry-choose">
                                    <td style="padding: 0px 15px 10px 5px">
                                        @Html.CheckBoxFor(model=> model.StoreInfo.ListIndustry[i].Selected, new { @class = "flat-industry", @onclick = "ChooseIndustryForCreateStore("+ Model.StoreInfo.ListIndustry[i].Value +")" })
                                    </td>
                                    <td>
                                        @Html.Raw(Model.StoreInfo.ListIndustry[i].Text)
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
                <div class="form-group">
                    <div class="col-md-5 col-sm-5 col-xs-12 height-30 reset-padding-left-right">
                    </div>
                    <div class="col-md-7 col-sm-7 col-xs-12">
                        <ul class="header-buttons list-inline">
                            <li>
                                <a href="javascript:void(0);" class="btn btn-cyan" style="width: 150px;" onclick="DoneModalChooseIndustryForCreateStore('#div-content-store-information', '')">Done</a>
                            </li>
                            <li>
                                <a href="javascript:void(0);" class="btn text-cyan bg-white" data-dismiss="modal">
                                    Cancel
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var btnGlobal;
    var btnGlobalAppliedProduct;
    var lstIndustry = [];

    $(document).ready(function () {
        $("#ddlCountryMerchant").select2({
            placeholder: 'Please choose Country',
        });

        var tableListStore = $('#datatable-responsive-list-store').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": 3 },
                { "width": "15%", "targets": [2] },
                { "width": "10%", "targets": [3] },
            ],
            "order": [
                [0, "desc"],
            ],
            "searching": true,
            "info": false,
            "lengthChange": true,
            "paging": true,
            "displayLength": 25,
            "sPaginationType": "numbers",//hide Pre|Next on row footer
            "ordering": true, //hide Order on row header
        });
        $('#lblRemainingStore').html(tableListStore.rows().count());

        init_ICheckIndustry();
        init_Switchery();

        //--------------
        //modal-store-info
        $("#modal-store-info").on('show.bs.modal', function (event) {
            btnGlobal = $(event.relatedTarget);

        });

        $('#modal-store-info').on('hidden.bs.modal', function () {

        })

        //modal-store-info-list-product  | updated code template 17-09-2018
        $("#modal-store-info-list-product").on('show.bs.modal', function (event) {
            btnGlobalAppliedProduct = $(event.relatedTarget);
        });

        $('#modal-store-info-list-product').on('hidden.bs.modal', function (event) {
            //--------
            var myModal = $(this);
            var STOREID = $(myModal).find('#_hidStoreId').val();
            //alert('STOREID: ' + STOREID);
            clearTimeout(myModal.data('hideInterval'));
            myModal.data('hideInterval', setTimeout(function () {
                $('#div-content-store-applied-products').html('');
                myModal.modal('hide');
                //-----
                ShowModalStoreInformation('#div-content-store-information', STOREID);
            }, 100));
        })
    });

    // iCheck
    // iCheck
    function init_ICheckIndustry() {
        if ($("input.flat-industry")[0]) {
            $(document).ready(function () {
                $('input.flat-industry').iCheck({
                    checkboxClass: 'icheckbox_flat-green',
                    radioClass: 'iradio_flat-green'
                });
            });
        }
    };

    // Switchery
    function init_Switchery() {
        if ($(".js-switch")[0]) {
            var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));
            elems.forEach(function (html) {
                var switchery = new Switchery(html, {
                    color: '#26B99A'
                });
            });
        }
    };
    
    //Update Merchant Information
    $("#form-merchant").submit(function (e) {
        var isSubmit = $(this).valid();
        if (isSubmit) {
            $.ajax({
                url: $(this).attr('action'),
                type: "POST",
                data: new FormData(this),
                processData: false,
                contentType: false,
                success: function () {
                    //ChangeElementMerchant(true);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $("#tabMerchant").html(jqXHR.responseText);
                },
                beforeSend: function () {
                    $('.se-pre-con').show();
                },
                complete: function () {
                    $('.se-pre-con').hide();
                },
            });
        }
        e.preventDefault();
    });

    //====Call Popup Store Information
    function ShowModalStoreInformation(ele, storeid) {
        if (storeid != null && storeid.length > 0) {
            $("#modal-store-info").modal({
                'show': true,
                'backdrop': 'static'
            });
            ViewStoreInformation(ele, storeid, '');
        }
        else {
            $('#modal-industry-info').modal('show');
        }        
    }

    function DoneModalChooseIndustryForCreateStore(ele, storeid) {
        $('#modal-industry-info').modal('hide');
        lstIndustry = [];
        $('.cls-industry-choose').each(function (index, value) {
            var isCheck = $(this).find('input[type=checkbox]').prop('checked');
            if (isCheck == true) {
                lstIndustry.push($(this).attr('data-id'));
                $(this).find('input[type=checkbox]').prop('checked', false).iCheck('update');
            }
        });
        $("#modal-store-info").modal({
            'show': true,
            'backdrop': 'static'
        });
        ViewStoreInformation(ele, storeid, lstIndustry)
    }

    function ViewStoreInformation(ele, _StoreID, lstIndustry) {
        $.ajax({
            type: "GET",
            url: CreateAbsoluteUrl("CallPopupStoreInfo"),
            traditional: true,
            data: { StoreID: _StoreID, ListIndustry: lstIndustry },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (data) {
                var isLogin = BackToLoginWhenSessionEnd(data);
                if (isLogin === true) {
                    window.location = "/Login/Index";
                }
                else {
                    $(ele).html(data);
                }
            },
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            complete: function () {
                $('.se-pre-con').hide();
            },
        });
    }

    //Call popup Applied Products
    function ShowModalAppliedProducts(ele, storeid) {
        if (storeid != null && storeid.length == 0) {
            $("#modal-store-info-list-product-create-store").modal({
                'show': true,
                'backdrop': 'static'
            });
        }
        else {
            var myModal = $("#modal-store-info");
            clearTimeout(myModal.data('hideInterval'));
            myModal.data('hideInterval', setTimeout(function () {
                myModal.modal('hide');
                //-----
                //$("#modal-store-info-list-product").modal({
                //    'show': true,
                //    'backdrop': 'static'
                //});
                ViewStoreAppliedProducts(ele, storeid);
            }, 100));
        }
    }

    function ViewStoreAppliedProducts(ele, _StoreID) {
        $.ajax({
            type: "GET",
            url: CreateAbsoluteUrl("CallPopupAppliedProducts"),
            traditional: true,
            data: { StoreID: _StoreID },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (data) {
                var isLogin = BackToLoginWhenSessionEnd(data);
                if (isLogin === true) {
                    window.location = "/Login/Index";
                }
                else {
                    $("#modal-store-info-list-product").modal({
                        'show': true,
                        'backdrop': 'static'
                    });
                    $(ele).html(data);
                }
            },
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            complete: function () {
                $('.se-pre-con').hide();
            },
        });
    }


    function DoneAllyProductForCreateStore() {
        $('#modal-store-info-list-product-create-store').modal('hide');
    }
</script>