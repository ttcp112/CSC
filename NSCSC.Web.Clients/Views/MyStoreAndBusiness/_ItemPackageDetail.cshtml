@{
    Layout = null;
}
@model NSCSC.Shared.Models.ClientSite.MyStoreAndBusiness.ProductPackageUserModels
@using NSCSC.Shared.Helpers
@using NSCSC.Shared
<style type="text/css">
    .mainproductdetail {
        margin-top: 15px;
        border-top-style: solid;
        border-color: silver;
        border-width: 0.3px;
    }

    .back {
        margin-top: 10px;
    }

        .back a {
            text-decoration: none;
            font-size: 17px;
            color: #000000;
        }

    .title {
        text-align: center;
        text-transform: uppercase;
        color: red;
        font-size: 20px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .clsImage {
        /*height: 250px;
        line-height: 250px;*/
        text-align: center;
        /*border-style: ridge;
        border-width: 0.3px;
        border-color: #808080;*/
        margin-bottom: 10px;
    }

    .clsContent {
        /*height: 250px;
        line-height: 250px;
        border-style: ridge;
        border-width: 0.3px;
        border-color: #808080;*/
        margin-bottom: 10px;
        padding-left: 10px;
    }

        .clsContent h3 {
            text-transform: uppercase;
            font-weight: bold;
        }

    .devicesmanagement {
        margin-top: 15px;
    }
    .cols-1 {
        width: 13%;
    }

    .cols-2 {
        width: 18%;
    }

    .cols-3 {
        width: 20%;
    }

    .cols-4 {
        width: 9%;
    }
    .lablel-error {
        padding: 0 20px;
        border-radius: 5px;
        color: white;
    }
</style>
<div class="mainproductdetail">
    <div class="title_top">
        <div class="back">
            <a href="javascript:void(0);" class="btn btn-info" id="btn-back-store-info" onclick="Back(@Model.TabId)" style="background-color: #5cb85c;color:#FFF">
                <i class="fa fa-mail-reply"></i>&nbsp;Back
            </a>
            @*<a href="javascript:void(0)" title="Back" onclick="Back(@Model.TabId)"><i class="fa fa-chevron-left" style="margin-right:10px;"></i>Back</a>*@
        </div>

        <div class="title">
            Package Detail
        </div>
    </div>
    <div class="contentproductdetail">
        <div class="row">
            <div class="col-md-3 col-sm-3 col-xs-12">
                <div class="clsImage" style="width:100%">
                    <a href="javascript:void(0)">
                        @if (!string.IsNullOrEmpty(Model.Image))
                        {
                            <img src="@Model.Image" alt="..." width="100" height="100" />
                        }
                    </a>
                </div>
            </div>
            <div class="col-md-9 col-sm-9 col-xs-12">
                <div class="clsContent">
                    @{
                        string PeriodName = "None";
                        switch (Model.PeriodType)
                        {
                            case (int)Commons.EPeriodType.Day:
                                PeriodName = "Day";
                                break;
                            case (int)Commons.EPeriodType.Month:
                                PeriodName = "Month";
                                break;
                            case (int)Commons.EPeriodType.Year:
                                PeriodName = "Year";
                                break;
                            case (int)Commons.EPeriodType.OneTime:
                                PeriodName = "One Time";
                                break;
                        }
                        if (Model.Period > 1 && Model.PeriodType != (int)Commons.EPeriodType.OneTime)
                        {
                            PeriodName += "s";
                        }

                    }
                    @if (Model.PeriodType != (int)Commons.EPeriodType.OneTime)
                    {
                        <h3>@Model.ItemName - @Model.Period @PeriodName</h3>
                    }
                    else
                    {
                        <h3>@Model.ItemName - @PeriodName</h3>
                    }
                    <h4>
                        @*Number of account*@
                        @if (Model.IsUnlimitedAccount)
                        {
                            @: License key of each product in this package can be used to activate unlimited user account(s).
                        }
                        else
                        {
                            @Html.Raw("License key of each product in this package can be used to activate " + Model.NumberOfAccount + " user account(s).")
                        }
                    </h4>

                    @if (Model.ListComposite != null && Model.ListComposite.Any())
                    {
                        <div class="divComposite" style="float:left;width:50%">
                            <h4 style="color:#333">
                                <span class="fontBold">
                                    Composite
                                </span>
                            </h4>
                            @foreach (var itemComposite in Model.ListComposite)
                            {
                                <h5>@itemComposite.Quantity x @itemComposite.ItemName</h5>
                            }
                        </div>
                    }

                    @if (Model.ListAddition != null && Model.ListAddition.Any())
                    {
                        <div class="divAddition" style="width:50%;float:left">
                            <h4 style="color:#333">
                                <span class="fontBold">
                                    Addition
                                </span>
                            </h4>
                            @foreach (var itemAddition in Model.ListAddition)
                            {
                                <h5>@itemAddition.Quantity x @itemAddition.ItemName</h5>
                            }
                        </div>
                    }
                    <div style="clear:both"></div>
                </div>
            </div>
        </div>
        @if (Model.ListProduct != null && Model.ListProduct.Any())
        {
            int i = 0;
            <div class="divProductPackage" style="margin-left:26%;">
                @foreach (var itemProduct in Model.ListProduct)
                {                
                    <div class="row" style="margin-bottom:15px;">
                        <div class="col-md-2 col-sm-2 col-xs-12">
                            @if (string.IsNullOrEmpty(itemProduct.Image))
                            {
                                <img src="@Commons.Image100_100" alt="..." width="70" height="70" style="vertical-align:top" />
                            }
                            else
                            {
                                <img src="@itemProduct.Image" alt="..." width="70" height="70" style="vertical-align:top" />
                            }
                        </div>
                        <div class="col-md-5 col-ms-5 col-xs-12">
                            <h4>@itemProduct.ItemName <i class="fa fa-info-circle text-primary" style="cursor:pointer" data-toggle="modal" data-target="#modalfunctionInfo_@itemProduct.AssetID"></i></h4>
                        </div>
                         <div class="col-md-3 col-sm-3 col-xs-12">
                          @{ 
                              string numStoreApply = "";
                              numStoreApply = itemProduct.ListStoreApply.Count == 0 ? "0 Store" : itemProduct.ListStoreApply.Count.ToString() + (itemProduct.ListStoreApply.Count > 1 ? " Store(s)" : " Store   ");
                               @:Applied Stores:
                                <a href="javascript:void(0)" class="btn btn-xs btn-success" onclick="" data-toggle="modal" data-target="#modal-choose-store_@itemProduct.AssetID">
                                    <span id="StoreApply_@i"> @numStoreApply</span>
                                </a>
                          }
                        </div>
                        @*<div class="col-md-4 col-sm-4 col-xs-12">*@
                            @*<h4>
                                    Expired on
                                    <span style="color:red">
                                        @if (!itemProduct.IsActive)
                                        {
                                            @:Not yet activated.
                                                                                }
                                        else
                                        {
                                            @Html.Raw(string.Format("<span style='color:#e54609'>{0}</span>", itemProduct.ExpiryDate.HasValue ? itemProduct.ExpiryDate.Value.ToString(Commons.FormatDateTime) : "Not yet activated."));
                                            //string.Format("{0}", itemProduct.ExpiryDate.HasValue ? itemProduct.ExpiryDate.Value.ToString(Commons.FormatDateTime) : "");
                                        }
                                    </span>
                                </h4>*@

                            @*@if (!Model.ActiveTime.HasValue)
                            {
                                <span style="color:red">
                                    Not yet activated.
                                </span>
                            }
                            else
                            {
                                <h4>
                                    Expired on
                                    <span style="color:red">
                                        @Html.Raw(string.Format("<span style='color:#e54609'>{0}</span>", itemProduct.ExpiryDate.HasValue ? itemProduct.ExpiryDate.Value.ToString(Commons.FormatDateTime) : ""))
                                    </span>
                                </h4>
                            }*@

                        @*</div>*@
                    </div>
                    if (itemProduct.ListDevices != null && itemProduct.ListDevices.Any())
                    {
                        <div class="devicesmanagement">
                            <div class="row" style="margin-bottom:10px;">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <label>Devices Management</label>
                                </div>
                            </div>

                            <div class="form-group divtbDevice_@itemProduct.ItemID">
                                @Html.Partial("_ItemDevice", itemProduct.ListDevices)
                            </div>
                        </div>
                    }
                    @Html.Partial("_ModalFunctionInfo", itemProduct)
          <div id="modal-choose-store_@itemProduct.AssetID" class="modal fade modalfunctionInfo" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false">
            <div class="modal-dialog">
                <div class="modal-content modal-center">
                    <div class="modal-header" style="padding:20px 15px;background-color: #f9f9f9">
                        <button type="button" id="closeFunction" class="close closeStore" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="myModalLabel2" style="text-align: center; font-weight:bolder">Applied Stores</h4>
                    </div>
                    <div class="modal-body scroll">
                        @*<hr style="margin:0px;" />*@
                        <div class="row">
                            <a href="javascript:void(0);" class="btn btn-success" id="btnUpdateStore" style="float:right; margin-right:15px" onclick="AssignStoreToProduct('#form-assign-store_'+@i,'@i')">
                                <i class="fa fa-check"></i>&nbsp;Update
                            </a>
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                @using (Html.BeginForm("AssignStoreToProduct", "MyStoreAndBusiness", FormMethod.Post, new
                                    {
                                        @class = "form-horizontal",
                                        @id = "form-assign-store_" + i,
                                        @enctype = "multipart/form-data"
                                    }))
                                    {
                                        @Html.Hidden("tempAssetID", itemProduct.AssignStore.tempAssetID, new { id = "hidAssetID" + i })
                                     if (itemProduct.AssignStore != null && itemProduct.AssignStore.ListAssignStore.Any())
                                     {
                                         foreach (var _itemStore in itemProduct.AssignStore.ListAssignStore)
                                         {
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].OffSet", _itemStore.Offset), _itemStore.Offset, new { @id = "hidOffset" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].StoreID", _itemStore.Offset), _itemStore.StoreID, new { @id = "hidAssetID" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].IsApply", _itemStore.Offset), _itemStore.IsApply, new { @id = "hidIsApply" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].StoreName", _itemStore.Offset), _itemStore.StoreName, new { @id = "hidStoreName" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].StoreType", _itemStore.Offset), _itemStore.StoreType, new { @id = "hidStoreType" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListProductApply[{0}].ActiveTime", _itemStore.Offset), _itemStore.ActivatedDate, new { @id = "hidActivatedDate" + i + _itemStore.Offset })
                                            @Html.Hidden(string.Format("ListAssignStore[{0}].ExpiredDate", _itemStore.Offset), _itemStore.ExpiredDate, new { @id = "hidExpiredDate" + i + _itemStore.Offset })
                                         }
                                     }
                                    <p id="falseToApply_@i"></p>
                            <table class="table table-striped table-bordered dt-responsive dataTable-custom datatable-responsive-list-item-products">
                                   <caption style="margin-top:-35px; cursor:pointer;max-width:40%;" class="checkall_@i">
                                        <input type="checkbox" id="CheckAll_@i" class="lineHeight" /><span> Check All</span>
                                    </caption>
                                <thead>
                                    <tr>
                                        <th class="text-center cols-4">Select</th>
                                        <th class="text-center cols-2">Store Name</th>
                                        <th class="text-center cols-3">Address</th>
                                        <th class="text-center cols-1">Industry</th>
                                        <th class="text-center cols-3">Activated Date</th>
                                        <th class="text-center cols-3">Expried Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (itemProduct.AssignStore != null && itemProduct.AssignStore.ListAssignStore.Any())
                                    {
                                        foreach (var _itemStore in itemProduct.AssignStore.ListAssignStore)
                                        {
                                        <tr class="ItemClient" style="cursor:pointer">                                         
                                            <td class="text-center cols-4">
                                                <input type="checkbox" aria-label="Checkbox for following text input" class="chkItem store_@i" id="checkinput_@i@_itemStore.Offset"
                                                        @string.Format("{0}", _itemStore.IsApply ? "checked" : "") />
                                            </td>
                                            <td class="cols-2">@_itemStore.StoreName</td>
                                            <td class="cols-3">@_itemStore.Address</td>
                                            <td class="cols-1">@_itemStore.Industry</td>
                                            <td class="cols-3">@string.Format("{0}", _itemStore.ActivatedDate.HasValue ? _itemStore.ActivatedDate.Value.ToString(Commons.FormatDateTime): "")</td>
                                            <td class="cols-3">@string.Format("{0}", _itemStore.ExpiredDate.HasValue ? _itemStore.ExpiredDate.Value.Date==Commons.MaxDate.Date? "Never": _itemStore.ExpiredDate.Value.ToString(Commons.FormatDateTime) : "")</td>
                                        </tr>
                                        }
                                     }
                                </tbody>
                            </table>
                                 }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
          i++;
                }
            </div>
        }


        <div class="divButtom">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12" style="text-align:center;">
                    @if (Model.ApplyExtend)
                    {
                        @*<a href="@Url.ActionEncoded("Extend", "MyStoreAndBusiness",new { Id=Model.ItemID, AssetID = Model.AssetID })" class="btn btn-success">EXTEND</a>*@
                        <a href="javascript:void(0);" class="btn text-uppercase btn-cyan text-white" id="btn-extend-@Model.AssetID"
                           onclick="ShowModalProductExtend('#div-content-product-extend', '@Model.ItemID', '@Model.AssetID')">Extend</a>
                    }

                    @if (!Model.ActiveTime.HasValue || (Model.ExpiryDate.HasValue && (Model.ExpiryDate.Value > DateTime.Now || Model.ExpiryDate.Value.Date == Commons.MinDate.Date)))
                    {
                        @*<a href="@Url.ActionEncoded("BuyingAdditionsStoreBusiness", "OurProducts", new { @AssetID = Model.AssetID })" class="btn btn-primary">BUY ADDITIONS</a>*@
                        <a href="javascript:void(0);" class="btn text-uppercase btn-cyan text-white" id="btn-buy-additions-@Model.AssetID"
                           onclick="ShowModalProductBuyAdditions('#div-content-product-buy-additions', '@Model.AssetID')">Buy Additions</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var mode = 0;
    var displayLength = 4;
    var _tableDevices = null;
    var _settingsOptionTableDevices = {
        "columnDefs": [
            { "orderable": false, "targets": [4, 5] },
            { "width": "25%", "targets": [0, 1, 2, 3, 4] },
        ],
        "order": [
            [0, 'asc']
        ],
        "autoWidth": false,
        "displayLength": displayLength,
        "bInfo": false,
        "searching": false,
        "lengthChange": false,
    };
    $('.ItemClient').click(function (event) {
        if (event.target.type != 'checkbox') {
            mode = 0;
            $('.chkItem', this).trigger('click');
        }
    });
    $(document).ready(function (e) {
        _tableHardware = $('#datatable-responsive-list-devicesmanagement').DataTable($.extend(true, {}, _settingsOptionTableDevices));
        $('.datatable-responsive-list-item-products').DataTable(
        {
            "columnDefs": [
                { "orderable": false, "targets": [0] }
            ],
            "order": [
                [1, 'asc']
            ],
            "bInfo": false,
            "paging": false,
            "autoWidth": false,
            "drawCallback": function () {
                var divHeight = $('.datatable-responsive-list-item-products tbody').prop('scrollHeight');
                if (divHeight == 0) {
                    var previousCss = $("#modal-choose-items").attr("style");
                    $("#modal-choose-items").css({
                        position: 'absolute',
                        visibility: 'hidden',
                        display: 'block'
                    });
                    divHeight = $('.datatable-responsive-list-item-products tbody').prop('scrollHeight');
                    $("#modal-choose-items").attr("style", previousCss ? previousCss : "");
                }
                if (divHeight > 500) {
                    $(".datatable-responsive-list-item-products thead tr").css('width', 'calc( 100% - 16px )');
                } else {
                    $(".datatable-responsive-list-item-products thead tr").css('width', '100%');
                }
            },
        });
    });
     @if (Model.ListProduct != null && Model.ListProduct.Any()) {
                int i = 0;
                <text>
                var _Count = new Array();
                function checkAllItem(i) {
                    var s = 0;
                    for (var j = 0; j < _Count[i]; j++) {
                        if ($("#checkinput_" + i + j).is(':checked'))
                            s++;
                    }
                    if (s == _Count[i]) {
                        if ($("#CheckAll_" + i).is(':checked')) { }
                        else {
                            $("#CheckAll_" + i).trigger("click");
                        }
                    } else {
                        if (mode == 0)
                            $("#CheckAll_" + i).removeAttr("checked");
                    }
                }
                 </text>
                foreach (var item in Model.ListProduct)
                {
                    if (item.AssignStore != null && item.AssignStore.ListAssignStore.Any()) {
                        foreach (var _itemStore in item.AssignStore.ListAssignStore)
                        {
                             <text>
                                $("#checkinput_"+@i+@_itemStore.Offset).click(function () {
                                    if ($(this).is(':checked')) {
                                            $("#hidIsApply"+@i+@_itemStore.Offset).val(true);
                                    } else {
                                            $("#hidIsApply"+@i+@_itemStore.Offset).val(false);
                                    }
                                     checkAllItem(@i);
                                 });
                            </text>
                        }
                    }
                    <text>
                        $('.checkall_'+@i).click(function (event) {
                            if (event.target.type != 'checkbox') {
                                $('#CheckAll_'+@i).trigger('click');
                            }
                        });
                        _Count.push('@item.AssignStore.ListAssignStore.Count');
                        $("#CheckAll_" +@i).click(function () {
                            mode = 1;
                            var i = '@i';
                            for (var j = 0; j < _Count[i]; j++) {
                                if ($(this).is(':checked')) {
                                    if ($("#checkinput_" + @i+j).is(':checked')) {
                                    } else {
                                        $("#checkinput_" + @i+j).trigger("click");
                                    }
                                } else {
                                    if ($("#checkinput_" + @i+j).is(':checked')) {
                                        $("#checkinput_" + @i+j).trigger("click");
                                    } else {
                                    }
                                }
                            }
                        });                     
                        checkAllItem(@i);
                    </text>
                    i++;
                }
            }
    function AssignStoreToProduct(form,i) {
        $.ajax({
            url: CreateAbsoluteUrl('AssignStoreToProduct'),
            type: "POST",
            data: $(form).serialize(),
            dataType: 'html',
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            complete: function () {
                $('.se-pre-con').hide();
            },
            success: function (data) {
                data = JSON.parse(data);
                if (data == true) {
                    CountStoreApply(i);
                    $('button.closeStore').trigger("click");
                }
                else
                    $("#falseToApply_"+i).html('<span class="label-danger lablel-error">Apply false </span>');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.statusText);
                $('.se-pre-con').hide();
            }
        });
    }
    function CountStoreApply(x) {
        var _Count = document.getElementsByClassName("store_"+x).length;
        var s = 0;
        for (var i = 0; i < _Count; i++) {
            if ($("#checkinput_"+x + i).is(':checked'))
                s++;
        }
        var _store = "";
        if (s == 0)
            _store = "0 Store";
        else
            if (s == 1)
                _store = "1 Store";
            else
                _store = s + " Store(s)";
        $("#StoreApply_"+x).html(_store);
    }
</script>